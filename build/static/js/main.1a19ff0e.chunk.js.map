{"version":3,"sources":["http-common.js","services/jobPost.service.js","services/auth.service.js","services/tag.service.js","components/add-jobPost.component.js","components/jobPost.component.js","components/Footer/Footer.js","components/JobBoardPage/JobBoardPage.js","components/register.component.js","components/logIn.component.js","components/Bodyframe/Bodyframe.js","components/user-profile.component.js","components/AboutUs/aboutUs.component.js","App.js","serviceWorker.js","index.js","img/background_frame.png","img/logo.jpg","img/catepillar.jpg","img/farmer.JPG","img/beach.png"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","API_URL","email","password","then","response","accessToken","localStorage","setItem","JSON","stringify","removeItem","username","parse","getItem","AddJobPost","props","onChangeTitle","bind","onChangeDescription","onChangeJobType","onChangeRate","onChangeContractLength","onChangeStartDate","saveJobPost","newJobPost","setTags","currentOrgUser","AuthService","getCurrentOrgUser","state","description","jobType","rate","contractLength","startDate","orgID","submitted","tagArray","e","options","target","tags","i","l","length","selected","push","value","console","log","this","setState","map","o","Array","JobPostDataService","forEach","tag","tagText","tagData","jobPostID","TagDataService","catch","saveJobTag","className","onClick","htmlFor","type","required","onChange","name","multiple","Component","JobPost","getJobPost","updateJobPost","deleteJobPost","currentJobPost","message","match","params","prevState","update","history","footerStyle","backgroundColor","position","width","bottom","height","zIndex","marginBottom","fontStyle","color","paddingBottom","verticalAlign","Footer","style","class","JobBoardPage","onChangeSearchTitle","retrieveJobPosts","refreshList","setActiveJobPost","removeAllJobPosts","searchTitle","jobPosts","currentIndex","toggleHandler","getAll","jobPost","index","deleteAll","findByTitle","placeholder","document","getElementById","classList","remove","add","key","to","role","isEmail","vusername","vpassword","Register","handleRegister","onChangeUsername","onChangeEmail","onChangePassword","handleRegisterType","successful","registerType","meesage","preventDefault","form","validateAll","checkBtn","context","_errors","register","componentDidMount","error","resMessage","toString","orgRegister","onSubmit","ref","c","display","justifyContent","autocomplete","checked","margin","padding","validations","logIn","handleLogin","onChangeLoginType","loading","loginType","login","window","location","reload","orgLogin","autoComplete","disabled","mainBody","src","backgroundFrame","Profile","currentUser","getCurrentUser","substring","substr","roles","AboutUs","beach","HelpLogo","farmer","Catepillar","App","logOut","orgLogOut","user","logout","orgLogout","Navbar","expand","Brand","fontFamily","fontSize","Toggle","aria-controls","Collapse","Nav","Link","href","exact","path","component","LogIn","JobPostsList","UserProfile","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1a19ff0e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"http://localhost:8080\"\r\n  }\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass JobPostDataService {\r\n  getAll() {\r\n    return http.get(\"/jobPosts\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/jobPosts/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/jobPosts\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/jobPosts/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/jobPosts/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/jobPosts`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/jobPosts?title=${title}`);\r\n  }\r\n}\r\n\r\nexport default new JobPostDataService();","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n    login(email, password) {\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    orgLogin(email, password) {\r\n        return axios\r\n            .post(API_URL + \"orgsignin\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"orgUser\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    orgLogout() {\r\n        localStorage.removeItem(\"orgUser\");\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    orgRegister(username, email, password) {\r\n        return axios.post(API_URL + \"orgsignup\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));;\r\n    }\r\n\r\n    getCurrentOrgUser() {\r\n        return JSON.parse(localStorage.getItem('orgUser'));;\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import http from \"../http-common\";\n\nclass TagDataService {\n\n  create(data) {\n    return http.post(\"/tags\", data);\n  }\n\n  // findAll(tag) {\n  //   return http.get(`/tags?tag=${tag}`);\n  // }\n}\n\nexport default new TagDataService();","import React, { Component } from \"react\";\r\nimport JobPostDataService from \"../services/jobPost.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport TagDataService from \"../services/tag.service\";\r\n\r\n\r\nexport default class AddJobPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeJobType = this.onChangeJobType.bind(this);\r\n    this.onChangeRate = this.onChangeRate.bind(this);\r\n    this.onChangeContractLength = this.onChangeContractLength.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.saveJobPost = this.saveJobPost.bind(this);\r\n    this.newJobPost = this.newJobPost.bind(this);\r\n    this.setTags = this.setTags.bind(this);\r\n\r\n    var currentOrgUser = AuthService.getCurrentOrgUser();\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      jobType: \"\",\r\n      rate: \"\",\r\n      contractLength: \"\",\r\n      startDate: \"\",\r\n      orgID: currentOrgUser.id,\r\n      submitted: false,\r\n      tagArray: null\r\n    };\r\n  }\r\n\r\n  setTags(e) {\r\n    var options = e.target.options;\r\n    var tags = [];\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected) {\r\n        tags.push(options[i].value);\r\n        console.log(options[i].value);\r\n      }\r\n    }\r\n    this.setState({\r\n      tagArray: [...e.target.options].map(o => o.value)\r\n    })\r\n    this.tagArray = new Array();\r\n    this.tagArray = tags;\r\n    console.log(this.tagArray);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeJobType(e) {\r\n    this.setState({\r\n      jobType: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRate(e) {\r\n    this.setState({\r\n      rate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeContractLength(e) {\r\n    this.setState({\r\n      contractLength: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  saveJobPost() {\r\n\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      jobType: this.state.jobType,\r\n      rate: this.state.rate,\r\n      contractLength: this.state.contractLength,\r\n      startDate: this.state.startDate,\r\n      orgID: this.state.orgID\r\n    };\r\n\r\n    JobPostDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          jobType: response.data.jobType,\r\n          rate: response.data.rate,\r\n          contractLength: response.data.contractLength,\r\n          startDate: response.data.startDate,\r\n          orgID: response.data.orgID,\r\n          submitted: true\r\n        });\r\n        this.tagArray.forEach(tag => {\r\n          saveJobTag(tag, response.data.id);\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n      function saveJobTag(tagText, id) {\r\n        var tagData = {\r\n          jobPostID: id,\r\n          tag: tagText\r\n        }\r\n        TagDataService.create(tagData)\r\n          .then(response => {\r\n            console.log(response);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n  }\r\n\r\n  newJobPost() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      jobType: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newJobPost}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n            <div>\r\n              <div className=\"form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  required\r\n                  value={this.state.title}\r\n                  onChange={this.onChangeTitle}\r\n                  name=\"title\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  required\r\n                  value={this.state.description}\r\n                  onChange={this.onChangeDescription}\r\n                  name=\"description\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jobType\">Paid or Volunteer</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"jobType\"\r\n                  required\r\n                  value={this.state.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                  name=\"jobType\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Hourly Rate</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"rate\"\r\n                  required\r\n                  value={this.state.rate}\r\n                  onChange={this.onChangeRate}\r\n                  name=\"rate\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Start Date</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"startDate\"\r\n                  required\r\n                  value={this.state.startDate}\r\n                  onChange={this.onChangeStartDate}\r\n                  name=\"startDate\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jobType\">Length of Contract</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"contractLength\"\r\n                  required\r\n                  value={this.state.contractLength}\r\n                  onChange={this.onChangeContractLength}\r\n                  name=\"contractLength\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jobType\">Tags</label><br/>\r\n                <select id=\"tags\" name=\"tags\" onChange={this.setTags} multiple>\r\n                  <option value=\"Volunteer\">Volunteer</option>\r\n                  <option value=\"Delivery\">Delivery</option>\r\n                  <option value=\"Food\">Food</option>\r\n                  <option value=\"Essential\">Essential</option>\r\n                  <option value=\"Elderly\">Elderly</option>\r\n                  <option value=\"Hospital\">Hospital</option>\r\n                  <option value=\"Charity\">Charity</option>\r\n                  <option value=\"Charity\">Education</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n              Hold down the Ctrl (Windows) or Command (Mac) button to select multiple tags.\r\n              </div>\r\n              </div>\r\n\r\n              <button onClick={this.saveJobPost} className=\"btn btn-success\">\r\n                Submit\r\n            </button>\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport JobPostDataService from \"../services/jobPost.service\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\nexport default class JobPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeJobType = this.onChangeJobType.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeRate = this.onChangeRate.bind(this);\r\n    this.onChangeContractLength = this.onChangeContractLength.bind(this);\r\n    this.getJobPost = this.getJobPost.bind(this);\r\n    this.updateJobPost = this.updateJobPost.bind(this);\r\n    this.deleteJobPost = this.deleteJobPost.bind(this);\r\n\r\n    this.state = {\r\n      currentJobPost: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        jobType: \"\",\r\n        rate: \"\",\r\n        contractLength: \"\",\r\n        startDate: \"\",\r\n        orgID: \"\"\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getJobPost(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentJobPost: {\r\n          ...prevState.currentJobPost,\r\n          title: title\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeJobType(e) {\r\n    const jobType = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        jobType: jobType\r\n      }\r\n    }));\r\n  }\r\n\r\n\r\n  onChangeStartDate(e) {\r\n    const startDate = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentJobPost: {\r\n          ...prevState.currentJobPost,\r\n          startDate: startDate\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeRate(e) {\r\n    const rate = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        rate: rate\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeContractLength(e) {\r\n    const contractLength = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        contractLength: contractLength\r\n      }\r\n    }));\r\n  }\r\n\r\n\r\n  getJobPost(id) {\r\n    JobPostDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentJobPost: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateJobPost() {\r\n    JobPostDataService.update(\r\n      this.state.currentJobPost.id,\r\n      this.state.currentJobPost\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The jobPost was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteJobPost() {    \r\n    JobPostDataService.delete(this.state.currentJobPost.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/jobPosts')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentJobPost } = this.state;\r\n\r\n    return (\r\n      <div id=\"contentLayout\">\r\n        <div id=\"contentDiv\">\r\n      <div>\r\n        {currentJobPost ? (\r\n          <div className=\"edit-form\">\r\n            <h4>JobPost</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentJobPost.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentJobPost.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Job Type: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"jobType\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Hourly Rate: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"rate\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Start Date: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"startDate\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Contract Length: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"contractLength\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteJobPost}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateJobPost}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a JobPost...</p>\r\n          </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst footerStyle = {\r\n    backgroundColor: '#2743A5',\r\n    position: 'absolute',\r\n    width: '100%',\r\n    bottom: '0px',\r\n    height: '50px',\r\n    zIndex: '2',\r\n    marginBottom:'0px',\r\n}\r\n\r\nconst fontStyle = {\r\n    position: 'absolute',\r\n    color: 'white',\r\n    paddingBottom:'0px',\r\n    verticalAlign:'center',\r\n    bottom:'12.5px'\r\n}\r\n\r\n\r\nfunction Footer () {\r\n    return (\r\n        <Fragment>\r\n            <footer style={footerStyle} class=\"page-footer font-small blue\">\r\n                <span style={fontStyle} class=\"footer-copyright text-left\">\r\n                    © 2020 Copyright: Help!\r\n                </span>\r\n            </footer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component, Fragment } from 'react';\nimport './jobBoard.css'\nimport JobPostDataService from \"../../services/jobPost.service\";\nimport { Link } from \"react-router-dom\";\n\nimport Navbar from '../Navbar/Navbar';\nimport Footer from '../Footer/Footer';\n\n\nclass JobBoardPage extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n        this.retrieveJobPosts = this.retrieveJobPosts.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveJobPost = this.setActiveJobPost.bind(this);\n        this.removeAllJobPosts = this.removeAllJobPosts.bind(this);\n        this.searchTitle = this.searchTitle.bind(this);\n    \n        this.state = {\n          jobPosts: [],\n          currentJobPost: null,\n          currentIndex: -1,\n          searchTitle: \"\",\n          toggleHandler: true\n        };\n      }\n    \n      componentDidMount() {\n        this.retrieveJobPosts();\n      }\n    \n      onChangeSearchTitle(e) {\n        const searchTitle = e.target.value;\n    \n        this.setState({\n          searchTitle: searchTitle\n        });\n      }\n    \n      retrieveJobPosts() {\n        JobPostDataService.getAll()\n          .then(response => {\n            this.setState({\n              jobPosts: response.data\n            });\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n    \n      refreshList() {\n        this.retrieveJobPosts();\n        this.setState({\n          currentJobPost: null,\n          currentIndex: -1\n        });\n      }\n    \n      setActiveJobPost(jobPost, index) {\n        this.setState({\n          currentJobPost: jobPost,\n          currentIndex: index\n        });\n      }\n    \n      removeAllJobPosts() {\n        JobPostDataService.deleteAll()\n          .then(response => {\n            console.log(response.data);\n            this.refreshList();\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n    \n      searchTitle() {\n        JobPostDataService.findByTitle(this.state.searchTitle)\n          .then(response => {\n            this.setState({\n              jobPosts: response.data\n            });\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n\n\n\n    render() {\n        const { searchTitle, jobPosts, currentJobPost, currentIndex } = this.state;\n\n        return ( \n          <div id=\"contentLayoutJobs\">\n            <div id=\"contentDiv\">\n              <div>\n                <section id=\"content\">\n                    <ul id=\"category\">\n                        <a id='ex'>\n                            <li id=\"ex\">Job Posts</li>\n                        </a>\n                        <li>Apply</li>\n                        <li>More</li>\n                    </ul>\n                    <form id='searchbar'>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Search by title\"\n                            value={searchTitle}\n                            onChange={this.onChangeSearchTitle}\n                        />\n                        <div className=\"input-group-append\">\n                            <button\n                                className=\"btn btn-outline-secondary\"\n                                type=\"button\"\n                                onClick={this.searchTitle}\n                            >\n                                Search\n                            </button>\n                        </div>\n                    </form>\n                    <article id='jobboard'>\n                        <div id='jobboardImage'>\n                            <div id=\"job-list\" className=\"col-md-12\">\n                                <h4>Job Posts</h4>\n\n                                <ul className=\"list-group\">\n                                    {jobPosts &&\n                                    jobPosts.map((jobPost, index) => (\n                                        <li\n                                        className={\n                                            \"list-group-item \" +\n                                            (index === currentIndex ? \"active\" : \"\")\n                                        }\n                                        id={jobPost.title + jobPost.id}\n                                        onClick={() => {\n                \n                                          if (this.state.toggleHandler) { // triggers open job post animation             \n                                            this.setActiveJobPost(jobPost, index);\n                                            this.state.toggleHandler = false;\n                                            document.getElementById('job-list').classList.remove('col-md-12');\n                                            document.getElementById('job-list').classList.add('col-md-7');\n                                            document.getElementById('contentArea').classList.add('bgOpacity');\n                                          } else { // revert back\n                                            this.setActiveJobPost(\"\", \"\")\n                                            this.state.toggleHandler = true;\n                                            document.getElementById('job-list').classList.remove('col-md-7');\n                                            document.getElementById('job-list').classList.add('col-md-12');\n                                            document.getElementById('contentArea').classList.remove('bgOpacity');\n                                          }\n                                          \n                                        }}\n                                        key={index}\n                                        style={{color: 'black'}}\n                                        >\n                                        {jobPost.title}\n                                        </li>\n                                    ))}\n                                </ul>\n\n                                <button\n                                    className=\"m-3 btn btn-sm btn-danger\"\n                                    onClick={this.removeAllJobPosts}\n                                >\n                                    Remove All\n                                </button>\n                                </div>\n                        </div>\n                        <div id=\"job-description-wrapper\" className=\"col-md-6\">\n                          <div id='job-description'>\n                                {currentJobPost && (\n                                    <div>\n                                    <h4>Job Post</h4>\n                                    <div>\n                                        <label>\n                                        <strong>Title:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.title}\n                                    </div>\n                                    <div>\n                                        <label>\n                                        <strong>Description:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.description}\n                                    </div>\n                                    <div>\n                                        <label>\n                                        <strong>Job Type:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.jobType}\n                                    </div>\n                                    <div>\n                                        <label>\n                                        <strong>Hourly Rate:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.rate}\n                                    </div>\n                                    <div>\n                                        <label>\n                                        <strong>Start Date:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.startDate}\n                                    </div>\n                                    <div>\n                                        <label>\n                                        <strong>Contract Length:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.contractLength}\n                                    </div>\n\n                                    <Link\n                                        to={\"/jobPosts/\" + currentJobPost.id}\n                                        className=\"badge badge-warning\"\n                                    >\n                                        Edit\n                                    </Link>\n                                    </div>\n                                ) }\n                          </div>\n                        </div>\n                    </article>\n                </section>\n                </div>\n                </div>\n        </div>\n        )\n    }\n}\n\nexport default JobBoardPage","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        *Required field\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.handleRegisterType = this.handleRegisterType.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\",\r\n      registerType: \"user\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegisterType(e) {\r\n    this.setState({\r\n      registerType: e.target.value\r\n    });\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  componentDidMount(message, successful){\r\n    this.setState({\r\n      meesage: message,\r\n      successful: successful\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n    console.log(this.state.registerType);\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      if (this.state.registerType === \"user\") {\r\n        AuthService.register(\r\n          this.state.username,\r\n          this.state.email,\r\n          this.state.password\r\n        ).then(\r\n          response => {\r\n            this.componentDidMount(response.data.message,true);\r\n            // this.props.history.push(\"/\");\r\n            // window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n      else {\r\n        AuthService.orgRegister(\r\n          this.state.username,\r\n          this.state.email,\r\n          this.state.password\r\n        ).then(\r\n          response => {\r\n            this.componentDidMount(response.data.message,true);\r\n            // this.props.history.push(\"/\");\r\n            // window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contentLayout\">\r\n        <div id=\"contentDiv\">\r\n          <div>\r\n        <div className=\"card\">\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div style={{display:'flex', justifyContent:'center'}}>\r\n                  <label class=\"btn btn-secondary\">\r\n                    <input class=\"m-2\" type=\"radio\" name=\"options\" id=\"user\" autocomplete=\"off\" value=\"user\" checked={this.state.registerType===\"user\"} onChange={this.handleRegisterType} />Register As Individual User</label>\r\n                  <label class=\"btn btn-secondary\"style={{margin:'0px !important', padding:'0px !important'}}>\r\n                    <input class=\"m-2\" type=\"radio\" name=\"options\" id=\"orgUser\" autocomplete=\"off\" value=\"orgUser\" checked={this.state.registerType===\"orgUser\"} onChange={this.handleRegisterType} />Register As Organization</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\" style={{margin:'0px'}}>Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n            \r\n          </Form>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { isEmail } from \"validator\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\n\r\n\r\nconst loginPosition = {\r\n  position: 'absolute',\r\n  top: '100px',\r\n  bottom: '100px',\r\n  \r\n}\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        *Required field\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class logIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeLoginType = this.onChangeLoginType.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n      loginType: \"user\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLoginType(e) {\r\n    this.setState({\r\n      loginType: e.target.value\r\n    });\r\n    console.log(\"state: \"+this.state.loginType);\r\n    console.log(\"e: \"+e.target.value);\r\n    console.log(\"test: \"+this);\r\n  }\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      if (this.state.loginType === \"user\") {\r\n        AuthService.login(this.state.email, this.state.password).then(\r\n          () => {\r\n            this.props.history.push(\"/\");\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              loading: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n      else {\r\n        AuthService.orgLogin(this.state.email, this.state.password).then(\r\n          () => {\r\n            this.props.history.push(\"/\");\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              loading: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contentLayout\">\r\n        <div id=\"contentDiv\">\r\n        <div>\r\n        <div className=\"card\">\r\n            <div >\r\n            <label class=\"btn btn-secondary\">\r\n              <input type=\"radio\" name=\"options\" id=\"user\" autoComplete=\"off\" value=\"user\" checked={this.state.loginType===\"user\"} onChange={this.onChangeLoginType} />Log In As Individual User</label>\r\n            <label class=\"btn btn-secondary\">\r\n              <input type=\"radio\" name=\"options\" id=\"orgUser\" autoComplete=\"off\" value=\"orgUser\" checked={this.state.loginType===\"orgUser\"} onChange={this.onChangeLoginType} />Log In As Organization</label>\r\n              </div>\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[email]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n                style={{margin:'0px'}}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Bodyframe.css'\r\nimport backgroundFrame from \"../../img/background_frame.png\"\r\n\r\nconst imgStyle = {\r\n    zIndex: '-1',\r\n    paddingTop: '50px',\r\n    paddingBottom: '50px',\r\n    width: '100%',\r\n    height: 'auto',\r\n}\r\n\r\n\r\nfunction mainBody() {\r\n    return ( \r\n            <main id=\"contentArea\">\r\n                <section id='ancement'>\r\n                    <div class='animated-text'>\r\n                        <div class='line'>Announcement</div>\r\n                        <div class='line'>Section</div>\r\n                        <div class='line'>Help! App</div>\r\n                        <div class='line'>DTC Team03</div>\r\n                        <div class='line'>Covid 19</div>\r\n                        <div class='line'>Year 2020</div>\r\n                    </div>\r\n                </section>\r\n                <section id=\"bgImg\">\r\n                    <img id=\"backgroundImg\" src={backgroundFrame}/>\r\n                </section>\r\n            </main>\r\n        \r\n    );\r\n}\r\n\r\nexport default mainBody;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\n\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div id=\"contentLayout\">\r\n            <div id=\"contentUserProfileDiv\">\r\n              <div>\r\n      <div className=\"container\">\r\n        <header className=\"\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\nimport './AboutUs.css'\nimport HelpLogo from '../../img/logo.jpg'\nimport Catepillar from '../../img/catepillar.jpg'\nimport farmer from '../../img/farmer.JPG'\nimport beach from '../../img/beach.png'\n\nexport default class AboutUs extends Component {\n\n    render() {\n        return (\n        <div id=\"aboutUs\">\n            <div id=\"aboutDiv\">\n                <div id=\"headDiv\">\n                    <h2 id=\"aboutHead\">About the help! team:</h2>\n                    <p id=\"aboutPara\">Covid-19 pandemic has brought many challenges to people's lives and we are currently living in a time that needs each other's helps more than ever. We, the help! app team, have recognized that issue and wanted to provide some aids to the society by connecting people who can help. In our help! app, people will be able to post and apply for works that are related to solving the problems that are caused by the pandemic.</p>\n                </div>\n                <div class=\"items\" id=\"itemOne\">\n                    <h3>Maria Davis</h3>\n                    <p>I am a second term student in BCIT's CST program. I love designing apps to bring people together and make life easier. I hope help! assists our communities in overcoming the COVID-19 crisis.</p>\n                    <img class=\"selfImg\" src={beach}></img>\n                </div>\n                <div class=\"items\" id=\"itemTwo\">\n                    <h3>Chase Lu</h3>\n                    <p> yo</p>\n                    <img class=\"selfImg\" src={HelpLogo}></img>\n                </div>\n                <div class=\"items\" id=\"itemThree\">\n                    <h3>Geun Uoo Kim</h3>\n                    <p class=\"selfIntroduction\">I started BCIT CST program in Winter 2020, and I chose this program because technology has always been my foremost interest. I also like to go hiking and chill.</p>\n                    <img class=\"selfImg\" src={farmer}></img>\n                </div>\n                <div class=\"items\" id=\"itemFour\">\n                    <h3>Ethan Sadowski</h3>\n                    <p class=\"selfIntroduction\">I am a first semester student in BCIT's CST Program, I chose to enroll at BCIT because I have always had an interest in computing and I wanted to gain some more applied skills.</p>\n                    <img class=\"selfImg\" src={Catepillar}></img>\n                </div>\n            </div>\n          </div>\n        );\n      }\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport AddJobPost from \"./components/add-jobPost.component\";\r\nimport JobPost from \"./components/jobPost.component\";\r\nimport JobPostsList from \"./components/JobBoardPage/JobBoardPage\";\r\nimport Register from \"./components/register.component\";\r\nimport LogIn from \"./components/logIn.component\";\r\nimport Bodyframe from './components/Bodyframe/Bodyframe.js';\r\nimport Footer from './components/Footer/Footer.js';\r\nimport UserProfile from \"./components/user-profile.component\";\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport './Navbar.css'\r\nimport AuthService from \"./services/auth.service\";\r\nimport AboutUs from './components/AboutUs/aboutUs.component'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n    this.orgLogOut = this.orgLogOut.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser,\r\n      currentOrgUser: AuthService.getCurrentOrgUser\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser;\r\n    const orgUser = AuthService.getCurrentOrgUser;\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: AuthService.getCurrentUser(),\r\n        currentOrgUser: AuthService.getCurrentOrgUser()\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  orgLogOut() {\r\n    AuthService.orgLogout();\r\n  }\r\n\r\n  render() {\r\n    const {currentUser, currentOrgUser}=this.state;\r\n    return (\r\n      <Router>\r\n        <Navbar style={{ backgroundColor: \"#2743A5\" }} expand=\"sm\">\r\n          <Navbar.Brand className=\"navBrand\" id=\"navBrand\" style={{ fontFamily: \"Racing Sans One\", color: \"white\", fontSize: \"30px\" }}>help!</Navbar.Brand>\r\n          <Navbar.Toggle id=\"collapseButton\" aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {!currentUser && <Nav.Link id=\"navLink\" href=\"/register\">Register</Nav.Link>}\r\n              <Nav.Link id=\"navLink\" href=\"/jobPosts\">Job Board</Nav.Link>\r\n              {currentOrgUser && <Nav.Link id=\"navLink\" href=\"/add\">Add Job</Nav.Link>}\r\n              {currentUser && <Nav.Link id=\"navLink\" href=\"/userProfile\">My Profile</Nav.Link>}\r\n              {!currentUser &&! currentOrgUser && <Nav.Link id=\"navLink\" href=\"/logIn\">Log In</Nav.Link>}\r\n              {currentUser && <Nav.Link  id=\"navLink\"href=\"/logIn\" onClick={this.logOut}>Log Out</Nav.Link>}\r\n              {currentOrgUser && <Nav.Link id=\"navLink\" href=\"/logIn\" onClick={this.orgLogOut}>Log Out</Nav.Link>}\r\n              <Nav.Link id=\"navLink\" href=\"/aboutUs\">About Us</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Bodyframe/>\r\n            <Switch>\r\n              <Route exact path=\"/logIn\" component={LogIn} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path={[\"/\", \"/jobPosts\"]} component={JobPostsList} />\r\n              <Route exact path=\"/add\" component={AddJobPost} />\r\n              <Route path=\"/jobPosts/:id\" component={JobPost} />\r\n              <Route path=\"/userProfile\" component={UserProfile}/>\r\n              <Route path=\"/aboutUs\" component={AboutUs} />\r\n            </Switch>\r\n          \r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/background_frame.fb7d453b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.f8452c9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/catepillar.e086543f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/farmer.f50267ba.JPG\";","module.exports = __webpack_public_path__ + \"static/media/beach.20bae3d7.png\";"],"sourceRoot":""}