{"version":3,"sources":["img/profile_bg.png","http-common.js","services/jobPost.service.js","services/auth.service.js","services/tag.service.js","components/add-jobPost.component.js","components/jobPost.component.js","services/apply.service.js","components/apply.component.js","components/EasterEgg/helpers.js","components/EasterEgg/Beatle.js","components/EasterEgg/Virus.js","components/EasterEgg/EasterEgg.js","components/JobBoardPage/ViewJobPage.js","components/JobBoardPage/JobBoardPage.js","components/register.component.js","components/logIn.component.js","components/Bodyframe/Bodyframe.js","components/Footer/Footer.js","components/user-profile.component.js","components/AboutUs/aboutUs.component.js","components/savedJobs.component.js","App.js","serviceWorker.js","index.js","img/logo.jpg","components/EasterEgg/help.mp3","img/bg.png","img/chase.png","img/catepillar.jpg","img/farmer.JPG","img/beach.png"],"names":["module","exports","axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","orgId","API_URL","email","password","then","response","accessToken","localStorage","setItem","JSON","stringify","removeItem","username","parse","getItem","AddJobPost","props","onChangeTitle","bind","onChangeDescription","onChangeJobType","onChangeRate","onChangeContractLength","onChangeStartDate","saveJobPost","newJobPost","setTags","currentOrgUser","AuthService","getCurrentOrgUser","state","description","jobType","rate","contractLength","startDate","orgID","submitted","tagArray","e","options","target","tags","i","l","length","selected","push","value","console","log","this","setState","map","o","Array","JobPostDataService","forEach","tag","tagText","tagData","jobPostID","TagDataService","catch","saveJobTag","className","onClick","htmlFor","type","required","onChange","name","multiple","Component","JobPost","getJobPost","updateJobPost","deleteJobPost","currentJobPost","message","match","params","prevState","update","history","config","bucketName","region","accessKeyId","secretAccessKey","Apply","onChangeResume","submitApplication","upload","newApplication","currentUser","getCurrentUser","userID","resume","newResume","ApplyDataService","files","ReactS3","uploadFile","location","err","randomNumBetween","min","max","Math","random","randomNumBetweenExcluding","exMin","exMax","Beatle","args","position","radius","onDie","shape","Image","src","keys","up","y","down","left","x","right","screen","width","height","context","save","translate","rotate","rotation","PI","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","lineTo","closePath","fill","stroke","restore","Virus","velocity","deathRadius","lifeSpan","score","addScore","destroy","arc","KEY","EasterEgg","window","innerWidth","innerHeight","ratio","devicePixelRatio","space","virusCount","currentScore","topScore","inGame","beatle","virus","keyCode","addEventListener","handleKeys","handleResize","document","getElementById","audio","refs","canvas","getContext","requestAnimationFrame","removeEventListener","clearRect","scale","count","generateVirus","checkCollisionsWith","updateObjects","points","round","createObject","gameOver","newX","newY","item","group","items","index","splice","render","items1","items2","b","a","item1","item2","checkCollision","obj1","obj2","vx","vy","sqrt","endgame","class","startGame","mp3_file","autoPlay","loop","ref","ViewJobPage","onChangeSearchTitle","retrieveJobPosts","refreshList","setActiveJobPost","removeAllJobPosts","searchTitle","handleSave","logOut","orgLogOut","jobPosts","currentIndex","toggleHandler","currentJobPostSaved","saveHandle","userId","jobPostId","getAll","jobPost","findSaved","res","found","deleteAll","findByTitle","logout","orgLogout","placeholder","classList","remove","add","key","style","color","to","Button","variant","JobBoardPage","user","href","role","isEmail","vusername","vpassword","Register","handleRegister","onChangeUsername","onChangeEmail","onChangePassword","handleRegisterType","successful","registerType","meesage","preventDefault","form","validateAll","checkBtn","_errors","register","componentDidMount","error","resMessage","toString","orgRegister","onSubmit","c","display","justifyContent","autocomplete","checked","margin","padding","validations","logIn","handleLogin","onChangeLoginType","loading","loginType","login","reload","orgLogin","autoComplete","disabled","mainBody","backgroundFrame","footerStyle","backgroundColor","bottom","zIndex","marginBottom","fontStyle","paddingBottom","verticalAlign","Footer","Profile","HelpLogo","AboutUs","eggHandle","$","hide","beach","chase","farmer","Catepillar","JobPostsList","retrieveSavedJobs","getAllSaved","App","Navbar","expand","Brand","fontFamily","fontSize","Toggle","aria-controls","Collapse","Nav","Link","exact","path","component","SavedJobPosts","LogIn","UserProfile","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c7c8016.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_bg.188ac4a9.png\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://helpservices.herokuapp.com/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  }\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass JobPostDataService {\r\n  getAll() {\r\n    return http.get(\"/jobPosts\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/jobPosts/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/jobPosts\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/jobPosts/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/jobPosts/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/jobPosts`);\r\n  }\r\n\r\n  findByTitle(title) {\r\n    return http.get(`/jobPosts?title=${title}`);\r\n  }\r\n\r\n  findSaved(data) {\r\n    return http.post(\"/jobPosts/saved/find\",data);\r\n  }\r\n\r\n  saveHandle(data) {\r\n    return http.post(\"/jobPosts/saved/save\",data);\r\n  }\r\n\r\n  getAllSaved(id){\r\n    return http.get(`/jobPosts/saved/${id}`);\r\n  }\r\n\r\n  findByOrgId(orgId) {\r\n    return http.get(`/jobPosts?orgId=${orgId}`);\r\n  }\r\n\r\n  deleteAllOrg(orgId) {\r\n    return http.delete(`/jobPosts?orgId=${orgId}`);\r\n  }\r\n\r\n  findOrgPostByTitle(title, orgId) {\r\n    return http.get(`/jobPosts?title=${title}&orgId=${orgId}`);\r\n  }\r\n}\r\n\r\nexport default new JobPostDataService();","import axios from \"axios\";\r\n//const API_URL=\"http://localhost:8080/api/auth/\";\r\n const API_URL = \"https://helpservices.herokuapp.com/api/auth/\";\r\n\r\nclass AuthService {\r\n    login(email, password) {\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    orgLogin(email, password) {\r\n        return axios\r\n            .post(API_URL + \"orgsignin\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"orgUser\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    orgLogout() {\r\n        localStorage.removeItem(\"orgUser\");\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    orgRegister(username, email, password) {\r\n        return axios.post(API_URL + \"orgsignup\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));;\r\n    }\r\n\r\n    getCurrentOrgUser() {\r\n        return JSON.parse(localStorage.getItem('orgUser'));;\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import http from \"../http-common\";\r\n\r\nclass TagDataService {\r\n\r\n  create(data) {\r\n    return http.post(\"/tags\", data);\r\n  }\r\n\r\n  // findAll(tag) {\r\n  //   return http.get(`/tags?tag=${tag}`);\r\n  // }\r\n}\r\n\r\nexport default new TagDataService();","import React, { Component } from \"react\";\r\nimport JobPostDataService from \"../services/jobPost.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport TagDataService from \"../services/tag.service\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\n\r\n\r\nexport default class AddJobPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeJobType = this.onChangeJobType.bind(this);\r\n    this.onChangeRate = this.onChangeRate.bind(this);\r\n    this.onChangeContractLength = this.onChangeContractLength.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.saveJobPost = this.saveJobPost.bind(this);\r\n    this.newJobPost = this.newJobPost.bind(this);\r\n    this.setTags = this.setTags.bind(this);\r\n\r\n    var currentOrgUser = AuthService.getCurrentOrgUser();\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      jobType: \"\",\r\n      rate: \"\",\r\n      contractLength: \"\",\r\n      startDate: \"\",\r\n      orgID: currentOrgUser.id,\r\n      submitted: false,\r\n      tagArray: null\r\n    };\r\n  }\r\n\r\n  setTags(e) {\r\n    var options = e.target.options;\r\n    var tags = [];\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n      if (options[i].selected) {\r\n        tags.push(options[i].value);\r\n        console.log(options[i].value);\r\n      }\r\n    }\r\n    this.setState({\r\n      tagArray: [...e.target.options].map(o => o.value)\r\n    })\r\n    this.tagArray = new Array();\r\n    this.tagArray = tags;\r\n    console.log(this.tagArray);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeJobType(e) {\r\n    this.setState({\r\n      jobType: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRate(e) {\r\n    this.setState({\r\n      rate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeContractLength(e) {\r\n    this.setState({\r\n      contractLength: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  saveJobPost() {\r\n\r\n    var data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      jobType: this.state.jobType,\r\n      rate: this.state.rate,\r\n      contractLength: this.state.contractLength,\r\n      startDate: this.state.startDate,\r\n      orgID: this.state.orgID\r\n    };\r\n\r\n    JobPostDataService.create(data)\r\n      .then(response => {\r\n        console.log(response.data.id)\r\n        this.setState({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          jobType: response.data.jobType,\r\n          rate: response.data.rate,\r\n          contractLength: response.data.contractLength,\r\n          startDate: response.data.startDate,\r\n          orgID: response.data.orgID,\r\n          submitted: true\r\n        });\r\n        this.tagArray.forEach(tag => {\r\n          saveJobTag(tag, response.data.id);\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n      function saveJobTag(tagText, id) {\r\n        var tagData = {\r\n          jobPostID: id,\r\n          tag: tagText\r\n        }\r\n        TagDataService.create(tagData)\r\n          .then(response => {\r\n            console.log(response);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n  }\r\n\r\n  newJobPost() {\r\n    this.setState({\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\",\r\n      jobType: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contentLayoutAddJob\">\r\n        <div id=\"contentDiv\">\r\n        \r\n      <div className=\"card\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newJobPost}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n            <div id=\"addJobArea\">\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  required\r\n                  value={this.state.title}\r\n                  onChange={this.onChangeTitle}\r\n                  name=\"title\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  required\r\n                  value={this.state.description}\r\n                  onChange={this.onChangeDescription}\r\n                  name=\"description\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jobType\">Paid or Volunteer</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"jobType\"\r\n                  required\r\n                  value={this.state.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                  name=\"jobType\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Hourly Rate</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"rate\"\r\n                  required\r\n                  value={this.state.rate}\r\n                  onChange={this.onChangeRate}\r\n                  name=\"rate\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Start Date</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"startDate\"\r\n                  required\r\n                  value={this.state.startDate}\r\n                  onChange={this.onChangeStartDate}\r\n                  name=\"startDate\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jobType\">Length of Contract</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"contractLength\"\r\n                  required\r\n                  value={this.state.contractLength}\r\n                  onChange={this.onChangeContractLength}\r\n                  name=\"contractLength\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\" id=\"tagSelect\">\r\n                <label htmlFor=\"jobType\">Tags</label><br></br>\r\n                <select id=\"tags\" name=\"tags\" onChange={this.setTags} multiple>\r\n                  <option value=\"Volunteer\">Volunteer</option>\r\n                  <option value=\"Delivery\">Delivery</option>\r\n                  <option value=\"Food\">Food</option>\r\n                  <option value=\"Essential\">Essential</option>\r\n                  <option value=\"Elderly\">Elderly</option>\r\n                  <option value=\"Hospital\">Hospital</option>\r\n                  <option value=\"Charity\">Charity</option>\r\n                  <option value=\"Charity\">Education</option>\r\n                </select>\r\n                \r\n              </div>\r\n\r\n              <div>\r\n              Hold down the Ctrl (Windows) or Command (Mac) button to select multiple tags.\r\n              <br></br>\r\n              <button onClick={this.saveJobPost} className=\"btn btn-success\">\r\n                Submit\r\n            </button>\r\n              </div>\r\n              \r\n\r\n              \r\n            </div>\r\n          )}\r\n          \r\n          </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport JobPostDataService from \"../services/jobPost.service\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\nexport default class JobPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeJobType = this.onChangeJobType.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeRate = this.onChangeRate.bind(this);\r\n    this.onChangeContractLength = this.onChangeContractLength.bind(this);\r\n    this.getJobPost = this.getJobPost.bind(this);\r\n    this.updateJobPost = this.updateJobPost.bind(this);\r\n    this.deleteJobPost = this.deleteJobPost.bind(this);\r\n\r\n    this.state = {\r\n      currentJobPost: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        jobType: \"\",\r\n        rate: \"\",\r\n        contractLength: \"\",\r\n        startDate: \"\",\r\n        orgID: \"\"\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getJobPost(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentJobPost: {\r\n          ...prevState.currentJobPost,\r\n          title: title\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeJobType(e) {\r\n    const jobType = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        jobType: jobType\r\n      }\r\n    }));\r\n  }\r\n\r\n\r\n  onChangeStartDate(e) {\r\n    const startDate = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentJobPost: {\r\n          ...prevState.currentJobPost,\r\n          startDate: startDate\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeRate(e) {\r\n    const rate = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        rate: rate\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeContractLength(e) {\r\n    const contractLength = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentJobPost: {\r\n        ...prevState.currentJobPost,\r\n        contractLength: contractLength\r\n      }\r\n    }));\r\n  }\r\n\r\n\r\n  getJobPost(id) {\r\n    JobPostDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentJobPost: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateJobPost() {\r\n    JobPostDataService.update(\r\n      this.state.currentJobPost.id,\r\n      this.state.currentJobPost\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The jobPost was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteJobPost() {    \r\n    JobPostDataService.delete(this.state.currentJobPost.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/jobPosts')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentJobPost } = this.state;\r\n\r\n    return (\r\n      <div id=\"contentLayout\">\r\n        <div id=\"contentDiv\">\r\n      <div>\r\n        {currentJobPost ? (\r\n          <div className=\"edit-form\">\r\n            <h4>JobPost</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentJobPost.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentJobPost.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Job Type: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"jobType\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Hourly Rate: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"rate\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Start Date: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"startDate\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Contract Length: </strong>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"contractLength\"\r\n                  value={currentJobPost.jobType}\r\n                  onChange={this.onChangeJobType}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteJobPost}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateJobPost}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a JobPost...</p>\r\n          </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass ApplyDataService {\r\n  getAll() {\r\n    return http.get(\"/applications\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/applications/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/applications\", data);\r\n  }\r\n\r\n}\r\n\r\nexport default new ApplyDataService();","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ApplyDataService from \"../services/apply.service\";\r\nimport ReactS3 from 'react-s3';\r\n\r\n\r\n// AWS A3 file storage config\r\nconst config = {\r\n  bucketName: 'helpresumes',\r\n  region: 'us-west-2',\r\n  accessKeyId: 'AKIAIRAIJ67CYYUYKRVA',\r\n  secretAccessKey: '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'\r\n}\r\n\r\nexport default class Apply extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeResume = this.onChangeResume.bind(this);\r\n    this.submitApplication = this.submitApplication.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    this.newApplication = this.newApplication.bind(this);\r\n\r\n    var currentUser = AuthService.getCurrentUser();\r\n\r\n    this.state = {\r\n      id: null,\r\n      jobPostID: this.props.match.params.id,\r\n      userID: currentUser.id,\r\n      resume: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeResume(newResume) {\r\n    this.setState({\r\n      resume: newResume\r\n    });\r\n  }\r\n\r\n  submitApplication() {\r\n\r\n    var data = {\r\n      jobPostID: this.state.jobPostID,\r\n      userID: this.state.userID,\r\n      resume: this.state.resume\r\n    };\r\n\r\n    ApplyDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          jobPostID: response.data.jobPostID,\r\n          userID: response.data.userID,\r\n          resume: response.data.resume,\r\n          submitted: true\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  upload(e) {\r\n    console.log(e.target.files[0]);\r\n    ReactS3.uploadFile(e.target.files[0], config)\r\n      .then((data) => {\r\n        console.log(data.location);\r\n        this.setState({\r\n          resume: data.location\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  newApplication() {\r\n    this.setState({\r\n      id: null,\r\n      jobPostID: null,\r\n      userID: null,\r\n      resume: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=''>\r\n        <div className=\"submit-form\">\r\n          {this.state.submitted ? (\r\n            <div>\r\n              <h4>You applied to this job successfully!</h4>\r\n              <button className=\"btn btn-success\" onClick={this.newJobPost}>\r\n                Add\r\n            </button>\r\n            </div>\r\n          ) : (\r\n              <div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div>\r\n\r\n                    <label htmlFor=\"resume\">Upload your resume here:</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"resume\"\r\n                      required\r\n                      value={this.state.description}\r\n                      onChange={this.upload}\r\n                      name=\"resume\"\r\n                    />\r\n\r\n                    <button onClick={this.submitApplication} className=\"btn btn-success\">\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Random Number between 2 numbers\r\n */\r\nexport function randomNumBetween(min, max) {\r\n    return Math.random() * (max - min + 1) + min;\r\n};\r\n\r\n/**\r\n * Random Number between 2 numbers excluding a certain range\r\n */\r\nexport function randomNumBetweenExcluding(min, max, exMin, exMax) {\r\n    let random = randomNumBetween(min, max);\r\n    while (random > exMin && random < exMax) {\r\n        random = Math.random() * (max - min + 1) + min;\r\n    }\r\n    return random;\r\n};\r\n","import { randomNumBetween } from './helpers';\r\n\r\nexport default class Beatle {\r\n    constructor(args) {\r\n        this.position = args.position;\r\n        this.radius = 20;\r\n        this.create = args.create;\r\n        this.onDie = args.onDie;\r\n        this.shape = new Image();\r\n        this.shape.src = \"./pm.png\";\r\n        this.delete=false;\r\n    }\r\n    destroy() {\r\n        this.delete = true;\r\n        this.onDie();\r\n    }\r\n    render(state) {\r\n        if (state.keys.up) {\r\n            this.position.y -= 3;\r\n        }\r\n        if (state.keys.down) {\r\n            this.position.y += 3;\r\n        }\r\n        if (state.keys.left) {\r\n            this.position.x -= 3;\r\n        }\r\n        if (state.keys.right) {\r\n            this.position.x += 3;\r\n        }\r\n\r\n        if(this.position.x > state.screen.width) this.position.x = 0;\r\n        else if(this.position.x < 0) this.position.x = state.screen.width;\r\n        if(this.position.y > state.screen.height*0.8) this.position.y = 50;\r\n        else if(this.position.y < 50) this.position.y = state.screen.height*0.8;\r\n\r\n        const context = state.context;\r\n\r\n        // const image=new Image();\r\n        // image.onload=function(){\r\n        //     context.drawImage(image, this.position.x, this.poxition.y);\r\n        // };\r\n        // //image.onerror=function(){alert(\"image load failed\")};\r\n        // image.src=require(\"./pm.png\");\r\n\r\n        context.save();\r\n        context.translate(this.position.x, this.position.y);\r\n        context.rotate(this.rotation * Math.PI / 180);\r\n        context.strokeStyle = '#ffffff';\r\n        context.fillStyle = '#000000';\r\n        context.lineWidth = 2;\r\n        context.beginPath();\r\n        context.moveTo(0, -15);\r\n        context.lineTo(10, 10);\r\n        context.lineTo(5, 7);\r\n        context.lineTo(-5, 7);\r\n        context.lineTo(-10, 10);\r\n        context.closePath();\r\n        context.fill();\r\n        context.stroke();\r\n        context.restore();\r\n    }\r\n}","import {randomNumBetween} from './helpers';\r\n\r\nexport default class Virus {\r\n    constructor(args) {\r\n        this.position = args.position;\r\n        this.velocity = {\r\n            x:randomNumBetween(-0.5, 0.5),\r\n            y: randomNumBetween(-0.5, 0.5)\r\n        }\r\n        this.radius=randomNumBetween(15,50);\r\n        this.deathRadius=10;\r\n        this.lifeSpan=randomNumBetween(200,4000);\r\n        this.score=this.radius+this.lifeSpan/10;\r\n        this.create=args.create;\r\n        this.addScore=args.addScore;\r\n        this.delete=false;\r\n    }\r\n\r\n    destroy(){\r\n        this.delete=true;\r\n        this.addScore(this.score);\r\n    }\r\n\r\n    render(state) {\r\n        this.position.x+=this.velocity.x;\r\n        this.position.y+=this.velocity.y;\r\n\r\n        this.radius -= 0.1;\r\n        this.lifeSpan-=0.5;\r\n        if (this.radius<this.deathRadius || this.lifeSpan--<0){\r\n            this.destroy();\r\n        }\r\n\r\n        if(this.position.x > state.screen.width + this.radius) this.position.x = -this.radius;\r\n        else if(this.position.x < -this.radius) this.position.x = state.screen.width + this.radius;\r\n        if(this.position.y > state.screen.height*0.8 - this.radius) this.position.y = 50-this.radius;\r\n        else if(this.position.y < 50-this.radius) this.position.y = state.screen.height*0.8 + this.radius;\r\n\r\n        const context=state.context;\r\n        context.save();\r\n        //context.translate(this.position.x, this.position.y);\r\n        //context.rotate(this.rotation * Math.PI / 180);\r\n        context.beginPath();\r\n        context.arc(this.position.x,this.position.y,this.radius,0,2*Math.PI);\r\n        context.stroke();\r\n        context.restore();\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Beatle from './Beatle';\r\nimport Virus from './Virus';\r\nimport { randomNumBetweenExcluding, randomNumBetween } from './helpers';\r\nimport $ from \"jquery\";\r\nimport \"./style.css\";\r\nimport mp3_file from './help.mp3';\r\n\r\nconst KEY = {\r\n    LEFT: 37,\r\n    RIGHT: 39,\r\n    UP: 38,\r\n    DOWN: 40,\r\n    A: 65,\r\n    D: 68,\r\n    W: 87,\r\n    S: 83,\r\n\r\n    SPACE: 32\r\n};\r\n\r\nexport class EasterEgg extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            screen: {\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n                ratio: window.devicePixelRatio || 1,\r\n            },\r\n            context: null,\r\n            keys: {\r\n                left: 0,\r\n                right: 0,\r\n                up: 0,\r\n                down: 0,\r\n                space: 0,\r\n            },\r\n            virusCount: 10,\r\n            currentScore: 0,\r\n            topScore: localStorage['topscore'] || 0,\r\n            inGame: false\r\n        }\r\n        this.beatle = [];\r\n        this.virus = [];\r\n    }\r\n\r\n    handleResize(value, e) {\r\n        this.setState({\r\n            screen: {\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n                ratio: window.devicePixelRatio || 1,\r\n            }\r\n        });\r\n    }\r\n\r\n    handleKeys(value, e) {\r\n        let keys = this.state.keys;\r\n        if (e.keyCode === KEY.LEFT || e.keyCode === KEY.A) keys.left = value;\r\n        if (e.keyCode === KEY.RIGHT || e.keyCode === KEY.D) keys.right = value;\r\n        if (e.keyCode === KEY.UP || e.keyCode === KEY.W) keys.up = value;\r\n        if (e.keyCode === KEY.DOWN || e.keyCode === KEY.S) keys.down = value;\r\n        if (e.keyCode === KEY.SPACE) keys.space = value;\r\n        this.setState({\r\n            keys: keys\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //$('.animated-text').hide();\r\n        //$('#startBtn').html='Start?'\r\n        window.addEventListener('keyup', this.handleKeys.bind(this, false));\r\n        window.addEventListener('keydown', this.handleKeys.bind(this, true));\r\n        window.addEventListener('resize', this.handleResize.bind(this, false));\r\n        document.getElementById(\"mp3\").audio=0.5;\r\n        const context = this.refs.canvas.getContext('2d');\r\n        this.setState({ context: context });\r\n        requestAnimationFrame(() => { this.update() });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keyup', this.handleKeys);\r\n        window.removeEventListener('keydown', this.handleKeys);\r\n        window.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    update() {\r\n        const context = this.state.context;\r\n        context.clearRect(0, 0, this.state.screen.width, this.state.screen.height * 0.8);\r\n        const keys = this.state.keys;\r\n        const beatle = this.beatle[0];\r\n\r\n        context.save();\r\n        context.scale(this.state.screen.ratio, this.state.screen.ratio);\r\n\r\n        if (this.virus.length < randomNumBetween(5, 10) && this.virus.length < 25) {\r\n            let count = randomNumBetween(5, 10);\r\n            this.setState({ virusCount: count });\r\n            this.generateVirus(count);\r\n        }\r\n\r\n        this.checkCollisionsWith(this.beatle, this.virus);\r\n\r\n        this.updateObjects(this.beatle, 'beatle');\r\n        this.updateObjects(this.virus, 'virus');\r\n\r\n        context.restore();\r\n\r\n        requestAnimationFrame(() => { this.update() });\r\n    }\r\n\r\n    addScore(points) {\r\n        if (this.state.inGame) {\r\n            this.setState({\r\n                currentScore: Math.round(this.state.currentScore + points),\r\n            });\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        this.setState({\r\n            inGame: true,\r\n            currentScore: 0,\r\n        });\r\n\r\n        let beatle = new Beatle({\r\n            position: {\r\n                x: this.state.screen.width / 2,\r\n                y: this.state.screen.height / 2\r\n            },\r\n            create: this.createObject.bind(this),\r\n            onDie: this.gameOver.bind(this)\r\n        });\r\n        this.createObject(beatle, 'beatle');\r\n\r\n        this.virus = [];\r\n        this.generateVirus(this.state.virusCount);\r\n    }\r\n\r\n    gameOver() {\r\n        this.setState({\r\n            inGame: false,\r\n        });\r\n\r\n        // Replace top score\r\n        if (this.state.currentScore > this.state.topScore) {\r\n            this.setState({\r\n                topScore: Math.round(this.state.currentScore),\r\n            });\r\n            localStorage['topscore'] = this.state.currentScore;\r\n        }\r\n    }\r\n\r\n    generateVirus(count) {\r\n        let virus = [];\r\n        let beatle = this.beatle[0];\r\n        for (let i = 0; i < count; i++) {\r\n            let newX;\r\n            let newY;\r\n            if (this.inGame) {\r\n                newX = randomNumBetweenExcluding(0, this.state.screen.width, beatle.position.x - 100, beatle.position.x + 100);\r\n                newY = randomNumBetweenExcluding(50, this.state.screen.height * 0.8, beatle.position.y - 60, beatle.position.y + 60);\r\n            }\r\n            else {\r\n                newX = randomNumBetween(0, this.state.screen.width);\r\n                newY = randomNumBetween(50, this.state.screen.height * 0.8);\r\n            }\r\n            // newX=this.inGame?randomNumBetweenExcluding(0,this.state.screen.width,beatle.position.x-60,beatle.position.x+60):randomNumBetween(0,this.state.screen.width);\r\n            // newY=this.ingame?randomNumBetweenExcluding(50, this.state.screen.height*0.8, beatle.position.y-60, beatle.position.y+60):randomNumBetween(50, this.state.screen.height*0.8)\r\n            let virus = new Virus({\r\n                position: {\r\n                    x: newX,\r\n                    y: newY\r\n                },\r\n                create: this.createObject.bind(this),\r\n                addScore: this.addScore.bind(this)\r\n            });\r\n            this.createObject(virus, 'virus');\r\n        }\r\n    }\r\n    createObject(item, group) {\r\n        this[group].push(item);\r\n    }\r\n\r\n    updateObjects(items, group) {\r\n        let index = 0;\r\n        for (let item of items) {\r\n            if (item.delete) {\r\n                this[group].splice(index, 1);\r\n            } else {\r\n                items[index].render(this.state);\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n    checkCollisionsWith(items1, items2) {\r\n        var a = items1.length - 1;\r\n        var b;\r\n        for (a; a > -1; --a) {\r\n            b = items2.length - 1;\r\n            for (b; b > -1; --b) {\r\n                var item1 = items1[a];\r\n                var item2 = items2[b];\r\n                if (this.checkCollision(item1, item2)) {\r\n                    item1.destroy();\r\n                    item2.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkCollision(obj1, obj2) {\r\n        var vx = obj1.position.x - obj2.position.x;\r\n        var vy = obj1.position.y - obj2.position.y;\r\n        var length = Math.sqrt(vx * vx + vy * vy);\r\n        if (length < obj1.radius + obj2.radius && !obj1.delete && !obj2.delete) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let endgame;\r\n        let message;\r\n        if (this.state.currentScore >= this.state.topScore) {\r\n            message = this.state.currentScore + ' Points. New top score!';\r\n        } else {\r\n            message = this.state.currentScore + ' Points!'\r\n        }\r\n\r\n        if (!this.state.inGame) {\r\n            endgame = (\r\n                <div class=\"endgame\">\r\n                    <div><h2>{message}</h2></div>\r\n                    <div><button id=\"startBtn\" \r\n                        onClick={this.startGame.bind(this)}>\r\n                        Start again?\r\n              </button></div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <audio id=\"mp3\" src={mp3_file} autoPlay loop/>\r\n                <div id=\"ee\">\r\n                    <div id=\"msg\">\r\n                        <div id=\"endgame\">\r\n                            {endgame}\r\n                        </div>\r\n                        <div id=\"scores\">\r\n                            <span className=\"score current-score\" >Score: {this.state.currentScore}</span>\r\n                            <span className=\"score top-score\" >Top Score: {this.state.topScore}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"controls\" >\r\n                                Use [A][S][W][D] or [←][↑][↓][→] to MOVE<br />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <canvas ref=\"canvas\"\r\n                        width={this.state.screen.width * this.state.screen.ratio}\r\n                        height={this.state.screen.height * 0.8 * this.state.screen.ratio}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport './jobBoard.css'\r\nimport JobPostDataService from \"../../services/jobPost.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, ToggleButton } from 'react-bootstrap';\r\nimport {EasterEgg} from \"../EasterEgg/EasterEgg\";\r\n\r\n\r\n\r\nclass ViewJobPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n        this.retrieveJobPosts = this.retrieveJobPosts.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveJobPost = this.setActiveJobPost.bind(this);\r\n        this.removeAllJobPosts = this.removeAllJobPosts.bind(this);\r\n        this.searchTitle = this.searchTitle.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n        this.orgLogOut = this.orgLogOut.bind(this);\r\n    \r\n        this.state = {\r\n          jobPosts: [],\r\n          currentJobPost: null,\r\n          currentIndex: -1,\r\n          searchTitle: \"\",\r\n          toggleHandler: true,\r\n          currentJobPostSaved: true,\r\n          currentUser: AuthService.getCurrentUser(),\r\n          currentOrgUser: AuthService.getCurrentOrgUser\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        this.retrieveJobPosts();\r\n      }\r\n    \r\n      onChangeSearchTitle(e) {\r\n        const searchTitle = e.target.value;\r\n    \r\n        this.setState({\r\n          searchTitle: searchTitle\r\n        });\r\n      }\r\n\r\n      handleSave(e) {\r\n        if (e.target.value === \"save\") {\r\n          JobPostDataService.saveHandle({ userId: this.state.currentUser.id, jobPostId: this.state.currentJobPost.id, save: true })\r\n        }\r\n        else {\r\n          JobPostDataService.saveHandle({ userId: this.state.currentUser.id, jobPostId: this.state.currentJobPost.id, save: false })\r\n        }\r\n      }\r\n    \r\n      retrieveJobPosts() {\r\n        JobPostDataService.getAll()\r\n          .then(response => {\r\n            this.setState({\r\n              jobPosts: response.data\r\n            });\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n    \r\n      refreshList() {\r\n        this.retrieveJobPosts();\r\n        this.setState({\r\n          currentJobPost: null,\r\n          currentIndex: -1\r\n        });\r\n      }\r\n    \r\n      setActiveJobPost(jobPost, index) {\r\n        this.setState({\r\n          currentJobPost: jobPost,\r\n          currentIndex: index\r\n        });\r\n        if (this.state.currentUser) {\r\n          var data = {\r\n            userId: this.state.currentUser.id,\r\n            jobPostId: jobPost.id\r\n          };\r\n          console.log(data);\r\n          JobPostDataService.findSaved(data).then(res => {\r\n            console.log('res.data.found = ' + res.data.found);\r\n            this.setState({\r\n              currentJobPostSaved: res.data.found ? true : false,\r\n            })\r\n          })\r\n          console.log(this.state.currentJobPostSaved);\r\n        }\r\n      }\r\n    \r\n      removeAllJobPosts() {\r\n        JobPostDataService.deleteAll()\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.refreshList();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n    \r\n      searchTitle() {\r\n\r\n        JobPostDataService.findByTitle(this.state.searchTitle)\r\n          .then(response => {\r\n            this.setState({\r\n              jobPosts: response.data\r\n            });\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n\r\n      logOut() {\r\n        AuthService.logout();\r\n      }\r\n    \r\n      orgLogOut() {\r\n        AuthService.orgLogout();\r\n      }\r\n\r\n    render() {\r\n        const { searchTitle, jobPosts, currentJobPost, currentIndex, currentUser } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n            <form id='searchbar'>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Search by title\"\r\n                            value={searchTitle}\r\n                            onChange={this.onChangeSearchTitle}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <button\r\n                                className=\"btn btn-outline-secondary\"\r\n                                type=\"button\"\r\n                                onClick={this.searchTitle}\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    <article id='jobboard'>\r\n                        <div id='jobboardImage'>\r\n                            <div id=\"job-list\" className=\"col-md-12\">\r\n                                <h4>Job Posts</h4>\r\n\r\n                                <ul className=\"list-group\">\r\n                                    {jobPosts &&\r\n                                    jobPosts.map((jobPost, index) => (\r\n                                        <li\r\n                                        className={\r\n                                            \"list-group-item \" +\r\n                                            (index === currentIndex ? \"active\" : \"\")\r\n                                        }\r\n                                        id={jobPost.title + jobPost.id}\r\n                                        onClick={() => {\r\n                \r\n                                          if (this.state.toggleHandler) { // triggers open job post animation             \r\n                                            this.setActiveJobPost(jobPost, index);\r\n                                            this.state.toggleHandler = false;\r\n                                            document.getElementById('job-list').classList.remove('col-md-12');\r\n                                            document.getElementById('job-list').classList.add('col-md-7');\r\n                                            document.getElementById('contentArea').classList.add('bgOpacity');\r\n                                          } else { // revert back\r\n                                            this.setActiveJobPost(\"\", \"\")\r\n                                            this.state.toggleHandler = true;\r\n                                            document.getElementById('job-list').classList.remove('col-md-7');\r\n                                            document.getElementById('job-list').classList.add('col-md-12');\r\n                                            document.getElementById('contentArea').classList.remove('bgOpacity');\r\n                                          }\r\n                                          \r\n                                        }}\r\n                                        key={index}\r\n                                        style={{color: 'black'}}\r\n                                        >\r\n                                        {jobPost.title}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n\r\n                                <button\r\n                                    className=\"m-3 btn btn-sm btn-danger\"\r\n                                    onClick={this.removeAllJobPosts}\r\n                                >\r\n                                    Remove All\r\n                                </button>\r\n                                </div>\r\n                        </div>\r\n                        <div id=\"job-description-wrapper\">\r\n                          <div id='job-description'>\r\n                                {currentJobPost && (\r\n                                    <div>\r\n                                    <h4>Job Post</h4>\r\n                                    <div>\r\n                                        <label>\r\n                                        <strong>Title:</strong>\r\n                                        </label>{\" \"}\r\n                                        {currentJobPost.title}\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>\r\n                                        <strong>Description:</strong>\r\n                                        </label>{\" \"}\r\n                                        {currentJobPost.description}\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>\r\n                                        <strong>Job Type:</strong>\r\n                                        </label>{\" \"}\r\n                                        {currentJobPost.jobType}\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>\r\n                                        <strong>Hourly Rate:</strong>\r\n                                        </label>{\" \"}\r\n                                        {currentJobPost.rate}\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>\r\n                                        <strong>Start Date:</strong>\r\n                                        </label>{\" \"}\r\n                                        {currentJobPost.startDate}\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>\r\n                                        <strong>Contract Length:</strong>\r\n                                        </label>{\" \"}\r\n                                        {currentJobPost.contractLength}\r\n                                    </div>\r\n\r\n                                    <Link\r\n                                        to={\"/jobPosts/\" + currentJobPost.id}\r\n                                        className=\"badge badge-warning\"\r\n                                    >\r\n                                        Edit\r\n                                    </Link>\r\n                                    <Link\r\n                                        to={\"/apply/\" + currentJobPost.id}\r\n                                        className=\"badge badge-success\"\r\n                                    >\r\n                                        Apply\r\n                                    </Link>\r\n                                    {currentUser && !this.state.currentJobPostSaved && <Button variant=\"info\" value=\"save\" onClick={this.handleSave}> Save </Button>}\r\n                                    {currentUser && this.state.currentJobPostSaved && <Button variant=\"info\" value=\"unsave\" onClick={this.handleSave}> Unsave </Button>}\r\n                                    </div>\r\n                                ) }\r\n                          </div>\r\n                        </div>\r\n                    </article>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewJobPage;","import React, { Component, Fragment } from 'react';\r\nimport './jobBoard.css'\r\nimport JobPostDataService from \"../../services/jobPost.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, ToggleButton } from 'react-bootstrap';\r\nimport ViewJobPage from \"./ViewJobPage\";\r\n\r\n\r\nclass JobBoardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.logOut = this.logOut.bind(this);\r\n    this.orgLogOut = this.orgLogOut.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser,\r\n      currentOrgUser: AuthService.getCurrentOrgUser\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser;\r\n    const orgUser = AuthService.getCurrentOrgUser;\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: AuthService.getCurrentUser(),\r\n        currentOrgUser: AuthService.getCurrentOrgUser()\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  orgLogOut() {\r\n    AuthService.orgLogout();\r\n  }\r\n\r\n    render() {\r\n      const {currentUser, currentOrgUser}=this.state;\r\n      \r\n        return ( \r\n          <div id=\"contentLayoutJobs\">\r\n            <div id=\"contentDiv\">\r\n              <div>\r\n                <section id=\"content\">\r\n                    <ul id=\"category\">\r\n                        <div id='currentPage'>\r\n                          <a href=\"/jobposts\">\r\n                            <li id=\"ex\">Job Posts</li>\r\n                          </a>\r\n                        </div>\r\n                        {currentOrgUser && <a href=\"/viewapplicant\"><li class=\"onHover\">View Applicants</li></a>}\r\n                        {/* <a href=\"/viewapplicant\">\r\n                          <li class=\"onHover\">View Applicants</li>\r\n                        </a> */}\r\n                    </ul>\r\n                    <ViewJobPage />\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobBoardPage","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        *Required field\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.handleRegisterType = this.handleRegisterType.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\",\r\n      registerType: \"user\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegisterType(e) {\r\n    this.setState({\r\n      registerType: e.target.value\r\n    });\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  componentDidMount(message, successful){\r\n    this.setState({\r\n      meesage: message,\r\n      successful: successful\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n    console.log(this.state.registerType);\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      if (this.state.registerType === \"user\") {\r\n        AuthService.register(\r\n          this.state.username,\r\n          this.state.email,\r\n          this.state.password\r\n        ).then(\r\n          response => {\r\n            this.componentDidMount(response.data.message,true);\r\n            // this.props.history.push(\"/\");\r\n            // window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n      else {\r\n        AuthService.orgRegister(\r\n          this.state.username,\r\n          this.state.email,\r\n          this.state.password\r\n        ).then(\r\n          response => {\r\n            this.componentDidMount(response.data.message,true);\r\n            // this.props.history.push(\"/\");\r\n            // window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contentLayout\">\r\n        <div id=\"contentDiv\">\r\n          <div>\r\n        <div className=\"card\">\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div style={{display:'flex', justifyContent:'center'}}>\r\n                  <label class=\"btn btn-secondary\">\r\n                    <input class=\"m-2\" type=\"radio\" name=\"options\" id=\"user\" autocomplete=\"off\" value=\"user\" checked={this.state.registerType===\"user\"} onChange={this.handleRegisterType} />Register As Individual User</label>\r\n                  <label class=\"btn btn-secondary\"style={{margin:'0px !important', padding:'0px !important'}}>\r\n                    <input class=\"m-2\" type=\"radio\" name=\"options\" id=\"orgUser\" autocomplete=\"off\" value=\"orgUser\" checked={this.state.registerType===\"orgUser\"} onChange={this.handleRegisterType} />Register As Organization</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\" style={{margin:'0px'}}>Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n            \r\n          </Form>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { isEmail } from \"validator\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\n\r\n\r\nconst loginPosition = {\r\n  position: 'absolute',\r\n  top: '100px',\r\n  bottom: '100px',\r\n  \r\n}\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        *Required field\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class logIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeLoginType = this.onChangeLoginType.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n      loginType: \"user\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLoginType(e) {\r\n    this.setState({\r\n      loginType: e.target.value\r\n    });\r\n    console.log(\"state: \"+this.state.loginType);\r\n    console.log(\"e: \"+e.target.value);\r\n    console.log(\"test: \"+this);\r\n  }\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      if (this.state.loginType === \"user\") {\r\n        AuthService.login(this.state.email, this.state.password).then(\r\n          () => {\r\n            this.props.history.push(\"/\");\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              loading: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n      else {\r\n        AuthService.orgLogin(this.state.email, this.state.password).then(\r\n          () => {\r\n            this.props.history.push(\"/orgJobBoard\");\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              loading: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contentLayout\">\r\n        <div id=\"contentDiv\">\r\n        <div>\r\n        <div className=\"card\">\r\n            <div >\r\n            <label class=\"btn btn-secondary\">\r\n              <input type=\"radio\" name=\"options\" id=\"user\" autoComplete=\"off\" value=\"user\" checked={this.state.loginType===\"user\"} onChange={this.onChangeLoginType} />Log In As Individual User</label>\r\n            <label class=\"btn btn-secondary\">\r\n              <input type=\"radio\" name=\"options\" id=\"orgUser\" autoComplete=\"off\" value=\"orgUser\" checked={this.state.loginType===\"orgUser\"} onChange={this.onChangeLoginType} />Log In As Organization</label>\r\n              </div>\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[email]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n                style={{margin:'0px'}}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Bodyframe.css'\r\nimport backgroundFrame from \"../../img/bg.png\"\r\nimport JobPostDataService from \"../../services/jobPost.service\";\r\n\r\nconst imgStyle = {\r\n    zIndex: '-1',\r\n    paddingTop: '50px',\r\n    paddingBottom: '50px',\r\n    width: '100%',\r\n    height: 'auto',\r\n}\r\n\r\n\r\nclass mainBody extends Component {\r\n    constructor() {\r\n        super()\r\n        this.retrieveJobPosts = this.retrieveJobPosts.bind(this);\r\n            \r\n        this.state = {\r\n            jobPosts: [],\r\n            currentIndex: -1\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retrieveJobPosts();\r\n    }\r\n\r\n    retrieveJobPosts() {\r\n        JobPostDataService.getAll()\r\n          .then(response => {\r\n            this.setState({\r\n              jobPosts: response.data\r\n            });\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n\r\n    render() {\r\n        const { jobPosts, currentIndex } = this.state;\r\n\r\n        return ( \r\n                <main id=\"contentArea\">\r\n                    <section id='ancement'>\r\n                        <div class='animated-text'>\r\n                            <div class='line'>Announcement</div>\r\n                            <div class='line'>Section</div>\r\n                            <div class='line'>Help! App</div>\r\n                            <div class='line'>DTC Team03</div>\r\n                            <div class='line'>Covid 19</div>\r\n                            <div class='line'>Year 2020</div>\r\n                        </div>\r\n                    </section>\r\n                    <section id=\"bgImg\">\r\n                        <img id=\"backgroundImg\" src={backgroundFrame}/>\r\n                    </section>\r\n                    <section id=\"bottomtext\">\r\n                        <div>\r\n                            <ul id=\"bottom-display\">\r\n                                {jobPosts &&\r\n                                jobPosts.map((jobPost, index) => (\r\n                                <li\r\n                                id={jobPost.title + jobPost.id}\r\n                                key={index}\r\n                                style={{color: 'black'}}\r\n                                >\r\n                                {jobPost.title}\r\n                                </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default mainBody;\r\n","import React, { Component, Fragment } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst footerStyle = {\r\n    backgroundColor: '#2743A5',\r\n    position: 'absolute',\r\n    width: '100%',\r\n    bottom: '0px',\r\n    height: '50px',\r\n    zIndex: '2',\r\n    marginBottom:'0px',\r\n}\r\n\r\nconst fontStyle = {\r\n    position: 'absolute',\r\n    color: 'white',\r\n    paddingBottom:'0px',\r\n    verticalAlign:'center',\r\n    bottom:'12.5px'\r\n}\r\n\r\n\r\nfunction Footer () {\r\n    return (\r\n        <Fragment>\r\n            <footer style={footerStyle} class=\"page-footer font-small blue\">\r\n                <span style={fontStyle} class=\"footer-copyright text-left\">\r\n                    © 2020 Copyright: Help!\r\n                </span>\r\n            </footer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport AuthService from \"./../services/auth.service\";\r\nimport \"./Layouts/ContentLayout.css\";\r\nimport black_background from \"./../img/profile_bg.png\";\r\nimport \"./profile.css\";\r\nimport HelpLogo from \"./../img/logo.jpg\";\r\n\r\n\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"liquidHeading\">\r\n          <h3 id=\"myProfile\">My Profile</h3>\r\n        </div>\r\n        <div id=\"contentProfile\">\r\n          <div id=\"userProfileBackground\">\r\n            <img src={HelpLogo} id=\"profileImg\"></img>       \r\n            <div id=\"sub-info\">\r\n              <p><strong>Vancouver, B.C.</strong></p>\r\n              <p><strong>Home Address: </strong>1234 BCIT Ave.</p>\r\n              <p><strong>Postal Code: </strong>A1B-2CD</p>\r\n              <p><strong>Phone Number: </strong>123-456-7890</p>\r\n            </div>\r\n            <div id=\"main-info\">\r\n              <p><strong>Name: </strong>{currentUser.username}</p>\r\n              <p><strong>E-mail: </strong>{currentUser.email}</p>\r\n              <p><strong>Occupation: </strong>student</p>\r\n            </div>\r\n            <div id=\"my-resume\">\r\n              <h3>My Resume</h3>\r\n              <div id=\"resume-content\">\r\n                <p>resume stuffs</p>\r\n              </div>\r\n            </div>   \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport './AboutUs.css'\r\nimport HelpLogo from '../../img/logo.jpg'\r\nimport chase from '../../img/chase.png'\r\nimport Catepillar from '../../img/catepillar.jpg'\r\nimport farmer from '../../img/farmer.JPG'\r\nimport beach from '../../img/beach.png'\r\nimport $ from 'jquery';\r\nimport {EasterEgg} from \"../EasterEgg/EasterEgg\";\r\n\r\nexport default class AboutUs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.eggHandle = this.eggHandle.bind(this);\r\n\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n    eggHandle() {\r\n        if (this.state.count>=6) {\r\n            $('#aboutUs').hide();\r\n        }\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n        console.log(this.state.count);\r\n\r\n    }\r\n    render() {\r\n        const { count } = this.state;\r\n        return (\r\n            <div>\r\n                {count>=7 && <EasterEgg></EasterEgg>}\r\n            <div id=\"aboutUs\">\r\n                <div id=\"aboutDiv\">\r\n                    <div id=\"headDiv\">\r\n                        <h2 id=\"aboutHead\">About the help! team:</h2>\r\n                        <p id=\"aboutPara\">Covid-19 pandemic has brought many challenges to people's lives and we are currently living in a time that needs each other's helps more than ever. We, the <button onClick={this.eggHandle}>help!</button> app team, have recognized that issue and wanted to provide some aids to the society by connecting people who can help. In our help! app, people will be able to post and apply for works that are related to solving the problems that are caused by the pandemic.</p>\r\n                    </div>\r\n                    <div id=\"introductions\">\r\n                        <div class=\"items\" id=\"itemOne\">\r\n                            <h3 class=\"names\">Maria Davis</h3>\r\n                            <p class=\"selfIntroduction\"><span>I am a second term student in BCIT's CST program. I love designing apps to bring people together and make life easier. I hope help! assists our communities in overcoming the COVID-19 crisis.</span></p>\r\n                            <img class=\"selfImg\" src={beach}></img>\r\n                        </div>\r\n                        <div class=\"items\" id=\"itemTwo\">\r\n                            <h3 class=\"names\">Chase Lu</h3>\r\n                            <p class=\"selfIntroduction\"><span> yo</span></p>\r\n                            <img class=\"selfImg\" src={chase}></img>\r\n                        </div>\r\n                        <div class=\"items\" id=\"itemThree\">\r\n                            <h3 class=\"names\">Geun Uoo Kim</h3>\r\n                            <p class=\"selfIntroduction\"><span>I started BCIT CST program in Winter 2020, and I chose this program because technology has always been my foremost interest. I also like to go hiking and chill.</span></p>\r\n                            <img class=\"selfImg\" src={farmer}></img>\r\n                        </div>\r\n                        <div class=\"items\" id=\"itemFour\">\r\n                            <h3 class=\"names\">Ethan Sadowski</h3>\r\n                            <p class=\"selfIntroduction\"><span>I am a first semester student in BCIT's CST Program, I chose to enroll at BCIT because I have always had an interest in computing and I wanted to gain some more applied skills.</span></p>\r\n                            <img class=\"selfImg\" src={Catepillar}></img>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport JobPostDataService from \"../services/jobPost.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, ToggleButton } from 'react-bootstrap';\r\n\r\n\r\nexport default class JobPostsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveSavedJobs = this.retrieveSavedJobs.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveJobPost = this.setActiveJobPost.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n\r\n    this.state = {\r\n      jobPosts: [],\r\n      currentJobPost: null,\r\n      currentJobPostSaved: true,\r\n      currentIndex: -1,\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveSavedJobs();\r\n  }\r\n\r\n  handleSave(e) {\r\n    if (e.target.value === \"save\") {\r\n      JobPostDataService.saveHandle({ userId: this.state.currentUser.id, jobPostId: this.state.currentJobPost.id, save: true })\r\n    }\r\n    else {\r\n      JobPostDataService.saveHandle({ userId: this.state.currentUser.id, jobPostId: this.state.currentJobPost.id, save: false })\r\n    }\r\n  }\r\n\r\n  retrieveSavedJobs() {\r\n    console.log(this.state.currentUser);\r\n    JobPostDataService.getAllSaved(this.state.currentUser.id)\r\n      .then(response => {\r\n        this.setState({\r\n          jobPosts: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveSavedJobs();\r\n    this.setState({\r\n      currentJobPost: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveJobPost(jobPost, index) {\r\n    this.setState({\r\n      currentJobPost: jobPost,\r\n      currentIndex: index\r\n    });\r\n    if (this.state.currentUser) {\r\n      var data = {\r\n        userId: this.state.currentUser.id,\r\n        jobPostId: jobPost.id\r\n      };\r\n      console.log(data);\r\n      JobPostDataService.findSaved(data).then(res => {\r\n        console.log('res.data.found = ' + res.data.found);\r\n        this.setState({\r\n          currentJobPostSaved: res.data.found ? true : false,\r\n        })\r\n        console.log(this.state.currentJobPostSaved);\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { jobPosts, currentJobPost, currentIndex, currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Job Posts</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {jobPosts &&\r\n              jobPosts.map((jobPost, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveJobPost(jobPost, index)}\r\n                  key={index}\r\n                >\r\n                  {jobPost.title}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllJobPosts}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentJobPost ? (\r\n            <div>\r\n              <h4>Job Post</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Title:</strong>\r\n                </label>{\" \"}\r\n                {currentJobPost.title}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Description:</strong>\r\n                </label>{\" \"}\r\n                {currentJobPost.description}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Job Type:</strong>\r\n                </label>{\" \"}\r\n                {currentJobPost.jobType}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/jobPosts/\" + currentJobPost.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n              {currentUser && !this.state.currentJobPostSaved && <Button variant=\"info\" value=\"save\" onClick={this.handleSave}> Save </Button>}\r\n              {currentUser && this.state.currentJobPostSaved && <Button variant=\"info\" value=\"unsave\" onClick={this.handleSave}> Unsave </Button>}\r\n            </div>\r\n          ) : (\r\n              <div>\r\n                <br />\r\n                <p>Please click on a JobPost...</p>\r\n              </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport AddJobPost from \"./components/add-jobPost.component\";\r\nimport JobPost from \"./components/jobPost.component\";\r\nimport Apply from \"./components/apply.component\";\r\nimport JobPostsList from \"./components/JobBoardPage/JobBoardPage\";\r\nimport Register from \"./components/register.component\";\r\nimport LogIn from \"./components/logIn.component\";\r\nimport Bodyframe from './components/Bodyframe/Bodyframe.js';\r\nimport Footer from './components/Footer/Footer.js';\r\nimport UserProfile from \"./components/user-profile.component\";\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport './Navbar.css'\r\nimport AuthService from \"./services/auth.service\";\r\nimport AboutUs from './components/AboutUs/aboutUs.component'\r\nimport SavedJobPosts from './components/savedJobs.component';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n    this.orgLogOut = this.orgLogOut.bind(this);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser,\r\n      currentOrgUser: AuthService.getCurrentOrgUser\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser;\r\n    const orgUser = AuthService.getCurrentOrgUser;\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: AuthService.getCurrentUser(),\r\n        currentOrgUser: AuthService.getCurrentOrgUser()\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  orgLogOut() {\r\n    AuthService.orgLogout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, currentOrgUser } = this.state;\r\n    return (\r\n      <Router>\r\n        <Navbar style={{ backgroundColor: \"#2743A5\" }} expand=\"sm\">\r\n          <Navbar.Brand className=\"navBrand\" id=\"navBrand\" style={{ fontFamily: \"Racing Sans One\", color: \"white\", fontSize: \"30px\" }}>test4</Navbar.Brand>\r\n          <Navbar.Toggle id=\"collapseButton\" aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              {!currentUser && <Nav.Link id=\"navLink\" href=\"/register\">Register</Nav.Link>}\r\n              <Nav.Link id=\"navLink\" href=\"/jobPosts\">Job Board</Nav.Link>\r\n              {currentOrgUser && <Nav.Link id=\"navLink\" href=\"/add\">Add Job</Nav.Link>}\r\n              {currentUser && <Nav.Link id=\"navLink\" href=\"/userProfile\">My Profile</Nav.Link>}\r\n              {currentUser && <Nav.Link href=\"/savedJobs\">Saved Jobs</Nav.Link>}\r\n              {!currentUser && !currentOrgUser && <Nav.Link id=\"navLink\" href=\"/logIn\">Log In</Nav.Link>}\r\n              {currentUser && <Nav.Link id=\"navLink\" href=\"/logIn\" onClick={this.logOut}>Log Out</Nav.Link>}\r\n              {currentOrgUser && <Nav.Link id=\"navLink\" href=\"/logIn\" onClick={this.orgLogOut}>Log Out</Nav.Link>}\r\n              <Nav.Link id=\"navLink\" href=\"/aboutUs\">About Us</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Bodyframe />\r\n        <Switch>\r\n          <Route exact path=\"/savedJobs\" component={SavedJobPosts} />\r\n          <Route exact path=\"/logIn\" component={LogIn} />\r\n          <Route exact path=\"/apply/:id\" component={Apply} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path={[\"/\", \"/jobPosts\"]} component={JobPostsList} />\r\n          <Route exact path=\"/add\" component={AddJobPost} />\r\n          <Route path=\"/jobPosts/:id\" component={JobPost} />\r\n          <Route path=\"/userProfile\" component={UserProfile} />\r\n          <Route path=\"/aboutUs\" component={AboutUs} />\r\n        </Switch>\r\n\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.f8452c9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/help.c7a03952.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bg.d777f5c8.png\";","module.exports = __webpack_public_path__ + \"static/media/chase.6b8d70f4.png\";","module.exports = __webpack_public_path__ + \"static/media/catepillar.e086543f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/farmer.f50267ba.JPG\";","module.exports = __webpack_public_path__ + \"static/media/beach.20bae3d7.png\";"],"sourceRoot":""}