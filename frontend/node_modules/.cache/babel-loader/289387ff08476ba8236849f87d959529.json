{"ast":null,"code":"var _jsxFileName = \"/Users/JakeKim/Desktop/BCIT/COMP-2800-Team-DTC-03-Help/frontend/src/components/JobBoardPage/JobBoardPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport './jobBoard.css';\nimport JobPostDataService from \"../../services/jobPost.service\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from '../Navbar/Navbar';\nimport Footer from '../Footer/Footer';\n\nclass JobBoardPage extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveJobPosts = this.retrieveJobPosts.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveJobPost = this.setActiveJobPost.bind(this);\n    this.removeAllJobPosts = this.removeAllJobPosts.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.state = {\n      jobPosts: [],\n      currentJobPost: null,\n      currentIndex: -1,\n      searchTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveJobPosts();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveJobPosts() {\n    JobPostDataService.getAll().then(response => {\n      this.setState({\n        jobPosts: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  refreshList() {\n    this.retrieveJobPosts();\n    this.setState({\n      currentJobPost: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveJobPost(jobPost, index) {\n    this.setState({\n      currentJobPost: jobPost,\n      currentIndex: index\n    });\n  }\n\n  removeAllJobPosts() {\n    JobPostDataService.deleteAll().then(response => {\n      console.log(response.data);\n      this.refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  searchTitle() {\n    JobPostDataService.findByTitle(this.state.searchTitle).then(response => {\n      this.setState({\n        jobPosts: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      searchTitle,\n      jobPosts,\n      currentJobPost,\n      currentIndex\n    } = this.state;\n    return React.createElement(\"main\", {\n      id: \"JobBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      id: \"ex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"ex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Job Posts\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Apply\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"More\")), React.createElement(\"form\", {\n      id: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search by title\",\n      value: searchTitle,\n      onChange: this.onChangeSearchTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary\",\n      type: \"button\",\n      onClick: this.searchTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(\"article\", {\n      id: \"jobboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"jobboardImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Job Posts\"), React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, jobPosts && jobPosts.map((jobPost, index) => React.createElement(\"li\", {\n      className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n      onClick: () => {\n        this.setActiveJobPost(jobPost, index);\n      },\n      key: index,\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, jobPost.title))), React.createElement(\"button\", {\n      className: \"m-3 btn btn-sm btn-danger\",\n      onClick: this.removeAllJobPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Remove All\"))), React.createElement(\"div\", {\n      id: \"openPost\",\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, currentJobPost ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Job Post\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Title:\")), \" \", currentJobPost.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Description:\")), \" \", currentJobPost.description), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Job Type:\")), \" \", currentJobPost.jobType), React.createElement(Link, {\n      to: \"/jobPosts/\" + currentJobPost.id,\n      className: \"badge badge-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Edit\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Please click on a JobPost...\"))))));\n  }\n\n}\n\nexport default JobBoardPage;","map":{"version":3,"sources":["/Users/JakeKim/Desktop/BCIT/COMP-2800-Team-DTC-03-Help/frontend/src/components/JobBoardPage/JobBoardPage.js"],"names":["React","Component","Fragment","JobPostDataService","Link","Navbar","Footer","JobBoardPage","constructor","props","onChangeSearchTitle","bind","retrieveJobPosts","refreshList","setActiveJobPost","removeAllJobPosts","searchTitle","state","jobPosts","currentJobPost","currentIndex","componentDidMount","e","target","value","setState","getAll","then","response","data","console","log","catch","jobPost","index","deleteAll","findByTitle","render","map","color","title","description","jobType","id"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './jobBoard.css'\nimport JobPostDataService from \"../../services/jobPost.service\";\nimport { Link } from \"react-router-dom\";\n\nimport Navbar from '../Navbar/Navbar';\nimport Footer from '../Footer/Footer';\n\n\nclass JobBoardPage extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n        this.retrieveJobPosts = this.retrieveJobPosts.bind(this);\n        this.refreshList = this.refreshList.bind(this);\n        this.setActiveJobPost = this.setActiveJobPost.bind(this);\n        this.removeAllJobPosts = this.removeAllJobPosts.bind(this);\n        this.searchTitle = this.searchTitle.bind(this);\n    \n        this.state = {\n          jobPosts: [],\n          currentJobPost: null,\n          currentIndex: -1,\n          searchTitle: \"\"\n        };\n      }\n    \n      componentDidMount() {\n        this.retrieveJobPosts();\n      }\n    \n      onChangeSearchTitle(e) {\n        const searchTitle = e.target.value;\n    \n        this.setState({\n          searchTitle: searchTitle\n        });\n      }\n    \n      retrieveJobPosts() {\n        JobPostDataService.getAll()\n          .then(response => {\n            this.setState({\n              jobPosts: response.data\n            });\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n    \n      refreshList() {\n        this.retrieveJobPosts();\n        this.setState({\n          currentJobPost: null,\n          currentIndex: -1\n        });\n      }\n    \n      setActiveJobPost(jobPost, index) {\n        this.setState({\n          currentJobPost: jobPost,\n          currentIndex: index\n        });\n      }\n    \n      removeAllJobPosts() {\n        JobPostDataService.deleteAll()\n          .then(response => {\n            console.log(response.data);\n            this.refreshList();\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n    \n      searchTitle() {\n        JobPostDataService.findByTitle(this.state.searchTitle)\n          .then(response => {\n            this.setState({\n              jobPosts: response.data\n            });\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n      }\n\n\n\n    render() {\n        const { searchTitle, jobPosts, currentJobPost, currentIndex } = this.state;\n\n        return (\n            <main id=\"JobBoard\">\n                <section id=\"content\">\n                    <ul id=\"category\">\n                        <a id='ex'>\n                            <li id=\"ex\">Job Posts</li>\n                        </a>\n                        <li>Apply</li>\n                        <li>More</li>\n                    </ul>\n                    <form id='searchbar'>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Search by title\"\n                            value={searchTitle}\n                            onChange={this.onChangeSearchTitle}\n                        />\n                        <div className=\"input-group-append\">\n                            <button\n                                className=\"btn btn-outline-secondary\"\n                                type=\"button\"\n                                onClick={this.searchTitle}\n                            >\n                                Search\n                            </button>\n                        </div>\n                    </form>\n                    <article id='jobboard'>\n                        <div id='jobboardImage'>\n                            <div className=\"col-md-12\">\n                                <h4>Job Posts</h4>\n\n                                <ul className=\"list-group\">\n                                    {jobPosts &&\n                                    jobPosts.map((jobPost, index) => (\n                                        <li\n                                        className={\n                                            \"list-group-item \" +\n                                            (index === currentIndex ? \"active\" : \"\")\n                                        }\n                                        onClick={() => {\n                                            this.setActiveJobPost(jobPost, index)\n                                        }}\n                                        key={index}\n                                        style={{color: 'black'}}\n                                        >\n                                        {jobPost.title}\n                                        </li>\n                                    ))}\n                                </ul>\n\n                                <button\n                                    className=\"m-3 btn btn-sm btn-danger\"\n                                    onClick={this.removeAllJobPosts}\n                                >\n                                    Remove All\n                                </button>\n                                </div>\n                        </div>\n                        <div id=\"openPost\" className=\"col-md-6\">\n                                {currentJobPost ? (\n                                    <div>\n                                    <h4>Job Post</h4>\n                                    <div>\n                                        <label>\n                                        <strong>Title:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.title}\n                                    </div>\n                                    <div>\n                                        <label>\n                                        <strong>Description:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.description}\n                                    </div>\n                                    <div>\n                                        <label>\n                                        <strong>Job Type:</strong>\n                                        </label>{\" \"}\n                                        {currentJobPost.jobType}\n                                    </div>\n\n                                    <Link\n                                        to={\"/jobPosts/\" + currentJobPost.id}\n                                        className=\"badge badge-warning\"\n                                    >\n                                        Edit\n                                    </Link>\n                                    </div>\n                                ) : (\n                                    <div>\n                                    <br />\n                                    <p>Please click on a JobPost...</p>\n                                    </div>\n                                )}\n                          </div>\n                    </article>\n                </section>\n            </main>\n        )\n    }\n}\n\nexport default JobBoardPage"]},"metadata":{},"sourceType":"module"}