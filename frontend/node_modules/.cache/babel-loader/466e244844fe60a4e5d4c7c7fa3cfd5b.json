{"ast":null,"code":"var _jsxFileName = \"/Users/JakeKim/Desktop/BCIT/COMP-2800-Team-DTC-03-Help/frontend/src/components/register.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport \"./Layouts/ContentLayout.css\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"*Required field\");\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"This is not a valid email.\");\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"The username must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"The password must be between 6 and 40 characters.\");\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.handleRegisterType = this.handleRegisterType.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\",\n      registerType: \"user\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegisterType(e) {\n    this.setState({\n      registerType: e.target.value\n    });\n    console.log(e.target.value);\n  }\n\n  componentDidMount(message, successful) {\n    this.setState({\n      meesage: message,\n      successful: successful\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n    console.log(this.state.registerType);\n\n    if (this.checkBtn.context._errors.length === 0) {\n      if (this.state.registerType === \"user\") {\n        AuthService.register(this.state.username, this.state.email, this.state.password).then(response => {\n          this.componentDidMount(response.data.message, true); // this.props.history.push(\"/\");\n          // window.location.reload();\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n      } else {\n        AuthService.orgRegister(this.state.username, this.state.email, this.state.password).then(response => {\n          this.componentDidMount(response.data.message, true); // this.props.history.push(\"/\");\n          // window.location.reload();\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"contentLayout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"contentDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleRegister,\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, !this.state.successful && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"m-2\",\n      type: \"radio\",\n      name: \"options\",\n      id: \"user\",\n      autocomplete: \"off\",\n      value: \"user\",\n      checked: this.state.registerType === \"user\",\n      onChange: this.handleRegisterType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), \"Register As Individual User\"), React.createElement(\"label\", {\n      class: \"btn btn-secondary\",\n      style: {\n        margin: '0px !important',\n        padding: '0px !important'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"m-2\",\n      type: \"radio\",\n      name: \"options\",\n      id: \"orgUser\",\n      autocomplete: \"off\",\n      value: \"orgUser\",\n      checked: this.state.registerType === \"orgUser\",\n      onChange: this.handleRegisterType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), \"Register As Organization\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      validations: [required, vusername],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      validations: [required, email],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required, vpassword],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      style: {\n        margin: '0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Sign Up\"))), this.state.message && React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, this.state.message)), React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/JakeKim/Desktop/BCIT/COMP-2800-Team-DTC-03-Help/frontend/src/components/register.component.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","AuthService","required","value","email","vusername","length","vpassword","Register","constructor","props","handleRegister","bind","onChangeUsername","onChangeEmail","onChangePassword","handleRegisterType","state","username","password","successful","message","registerType","e","setState","target","console","log","componentDidMount","meesage","preventDefault","form","validateAll","checkBtn","context","_errors","register","then","response","data","error","resMessage","toString","orgRegister","render","c","display","justifyContent","margin","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport \"./Layouts/ContentLayout.css\"\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        *Required field\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.handleRegisterType = this.handleRegisterType.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\",\r\n      registerType: \"user\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegisterType(e) {\r\n    this.setState({\r\n      registerType: e.target.value\r\n    });\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  componentDidMount(message, successful){\r\n    this.setState({\r\n      meesage: message,\r\n      successful: successful\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n    console.log(this.state.registerType);\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      if (this.state.registerType === \"user\") {\r\n        AuthService.register(\r\n          this.state.username,\r\n          this.state.email,\r\n          this.state.password\r\n        ).then(\r\n          response => {\r\n            this.componentDidMount(response.data.message,true);\r\n            // this.props.history.push(\"/\");\r\n            // window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n      else {\r\n        AuthService.orgRegister(\r\n          this.state.username,\r\n          this.state.email,\r\n          this.state.password\r\n        ).then(\r\n          response => {\r\n            this.componentDidMount(response.data.message,true);\r\n            // this.props.history.push(\"/\");\r\n            // window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              successful: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"contentLayout\">\r\n        <div id=\"contentDiv\">\r\n          <div>\r\n        <div className=\"card\">\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div style={{display:'flex', justifyContent:'center'}}>\r\n                  <label class=\"btn btn-secondary\">\r\n                    <input class=\"m-2\" type=\"radio\" name=\"options\" id=\"user\" autocomplete=\"off\" value=\"user\" checked={this.state.registerType===\"user\"} onChange={this.handleRegisterType} />Register As Individual User</label>\r\n                  <label class=\"btn btn-secondary\"style={{margin:'0px !important', padding:'0px !important'}}>\r\n                    <input class=\"m-2\" type=\"radio\" name=\"options\" id=\"orgUser\" autocomplete=\"off\" value=\"orgUser\" checked={this.state.registerType===\"orgUser\"} onChange={this.handleRegisterType} />Register As Organization</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\" style={{margin:'0px'}}>Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n            \r\n          </Form>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}