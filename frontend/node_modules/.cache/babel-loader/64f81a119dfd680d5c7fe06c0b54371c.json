{"ast":null,"code":"var _jsxFileName = \"/Users/JakeKim/Desktop/BCIT/COMP-2800-Team-DTC-03-Help/frontend/src/components/logIn.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport { isEmail } from \"validator\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"*Required field\");\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"This is not a valid email.\");\n  }\n};\n\nexport default class logIn extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeLoginType = this.onChangeLoginType.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\",\n      loginType: \"user\"\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeLoginType(e) {\n    this.setState({\n      loginType: e.target.value\n    });\n    console.log(\"state: \" + this.state.loginType);\n    console.log(\"e: \" + e.target.value);\n    console.log(\"test: \" + this);\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      if (this.state.loginType === \"user\") {\n        AuthService.login(this.state.email, this.state.password).then(() => {\n          this.props.history.push(\"/\");\n          window.location.reload();\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        });\n      } else {\n        AuthService.orgLogin(this.state.email, this.state.password).then(() => {\n          this.props.history.push(\"/\");\n          window.location.reload();\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        });\n      }\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      id: \"user\",\n      autoComplete: \"off\",\n      value: \"user\",\n      checked: this.state.loginType === \"user\",\n      onChange: this.onChangeLoginType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), \"Log In As Individual User\"), React.createElement(\"label\", {\n      class: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"options\",\n      id: \"orgUser\",\n      autoComplete: \"off\",\n      value: \"orgUser\",\n      checked: this.state.loginType === \"orgUser\",\n      onChange: this.onChangeLoginType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \"Log In As Organization\")), React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      validations: [email],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      disabled: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Login\"))), this.state.message && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.message)), React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/JakeKim/Desktop/BCIT/COMP-2800-Team-DTC-03-Help/frontend/src/components/logIn.component.js"],"names":["React","Component","Form","Input","CheckButton","AuthService","isEmail","required","value","email","logIn","constructor","props","handleLogin","bind","onChangeEmail","onChangePassword","onChangeLoginType","state","password","loading","message","loginType","e","setState","target","console","log","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","then","history","push","window","location","reload","error","resMessage","response","data","toString","orgLogin","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { isEmail } from \"validator\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        *Required field\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class logIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeLoginType = this.onChangeLoginType.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n      loginType: \"user\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLoginType(e) {\r\n    this.setState({\r\n      loginType: e.target.value\r\n    });\r\n    console.log(\"state: \"+this.state.loginType);\r\n    console.log(\"e: \"+e.target.value);\r\n    console.log(\"test: \"+this);\r\n  }\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      if (this.state.loginType === \"user\") {\r\n        AuthService.login(this.state.email, this.state.password).then(\r\n          () => {\r\n            this.props.history.push(\"/\");\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              loading: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n      else {\r\n        AuthService.orgLogin(this.state.email, this.state.password).then(\r\n          () => {\r\n            this.props.history.push(\"/\");\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              loading: false,\r\n              message: resMessage\r\n            });\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <div>\r\n            <label class=\"btn btn-secondary\">\r\n              <input type=\"radio\" name=\"options\" id=\"user\" autoComplete=\"off\" value=\"user\" checked={this.state.loginType===\"user\"} onChange={this.onChangeLoginType} />Log In As Individual User</label>\r\n            <label class=\"btn btn-secondary\">\r\n              <input type=\"radio\" name=\"options\" id=\"orgUser\" autoComplete=\"off\" value=\"orgUser\" checked={this.state.loginType===\"orgUser\"} onChange={this.onChangeLoginType} />Log In As Organization</label>\r\n          </div>\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[email]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}