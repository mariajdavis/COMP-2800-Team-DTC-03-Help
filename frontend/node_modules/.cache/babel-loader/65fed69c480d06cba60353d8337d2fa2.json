{"ast":null,"code":"import axios from \"axios\";\nconst proxy_URL = \"https://cors-anywhere.herokuapp.com\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(email, password) {\n    return axios.post(API_URL + \"signin\", {\n      email,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  orgLogin(email, password) {\n    return axios.post(API_URL + \"orgsignin\", {\n      email,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"orgUser\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  orgLogout() {\n    localStorage.removeItem(\"orgUser\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  orgRegister(username, email, password) {\n    return axios.post(API_URL + \"orgsignup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n  getCurrentOrgUser() {\n    return JSON.parse(localStorage.getItem('orgUser'));\n    ;\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/Users/JakeKim/Desktop/BCIT/COMP-2800-Team-DTC-03-Help/frontend/src/services/auth.service.js"],"names":["axios","proxy_URL","API_URL","AuthService","login","email","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","orgLogin","logout","removeItem","orgLogout","register","username","orgRegister","getCurrentUser","parse","getItem","getCurrentOrgUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,qCAAlB;AACA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACnB,WAAON,KAAK,CACPO,IADE,CACGL,OAAO,GAAG,QADb,EACuB;AACtBG,MAAAA,KADsB;AAEtBC,MAAAA;AAFsB,KADvB,EAKFE,IALE,CAKGC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACH,KAXE,CAAP;AAYH;;AAEDM,EAAAA,QAAQ,CAACX,KAAD,EAAQC,QAAR,EAAkB;AACtB,WAAON,KAAK,CACPO,IADE,CACGL,OAAO,GAAG,WADb,EAC0B;AACzBG,MAAAA,KADyB;AAEzBC,MAAAA;AAFyB,KAD1B,EAKFE,IALE,CAKGC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAAhC;AACH;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACH,KAXE,CAAP;AAYH;;AAEDO,EAAAA,MAAM,GAAG;AACLL,IAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACH;;AAEDC,EAAAA,SAAS,GAAG;AACRP,IAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB;AACH;;AAEDE,EAAAA,QAAQ,CAACC,QAAD,EAAWhB,KAAX,EAAkBC,QAAlB,EAA4B;AAChC,WAAON,KAAK,CAACO,IAAN,CAAWL,OAAO,GAAG,QAArB,EAA+B;AAClCmB,MAAAA,QADkC;AAElChB,MAAAA,KAFkC;AAGlCC,MAAAA;AAHkC,KAA/B,CAAP;AAKH;;AAEDgB,EAAAA,WAAW,CAACD,QAAD,EAAWhB,KAAX,EAAkBC,QAAlB,EAA4B;AACnC,WAAON,KAAK,CAACO,IAAN,CAAWL,OAAO,GAAG,WAArB,EAAkC;AACrCmB,MAAAA,QADqC;AAErChB,MAAAA,KAFqC;AAGrCC,MAAAA;AAHqC,KAAlC,CAAP;AAKH;;AAEDiB,EAAAA,cAAc,GAAG;AACb,WAAOT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,MAArB,CAAX,CAAP;AAAgD;AACnD;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,WAAOZ,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,SAArB,CAAX,CAAP;AAAmD;AACtD;;AA7Da;;AAgElB,eAAe,IAAItB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst proxy_URL = \"https://cors-anywhere.herokuapp.com\";\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n    login(email, password) {\r\n        return axios\r\n            .post(API_URL + \"signin\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    orgLogin(email, password) {\r\n        return axios\r\n            .post(API_URL + \"orgsignin\", {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.accessToken) {\r\n                    localStorage.setItem(\"orgUser\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    orgLogout() {\r\n        localStorage.removeItem(\"orgUser\");\r\n    }\r\n\r\n    register(username, email, password) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    orgRegister(username, email, password) {\r\n        return axios.post(API_URL + \"orgsignup\", {\r\n            username,\r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));;\r\n    }\r\n\r\n    getCurrentOrgUser() {\r\n        return JSON.parse(localStorage.getItem('orgUser'));;\r\n    }\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}